{"version":3,"sources":["assets/images/deck_scroll.png","components/inventory/StockList.js","pages/decks.js","enums/MonsterType.js","enums/Ability.js","enums/Classification.js","assets/images/level_icon.png","assets/images/attr_fire_icon.png","assets/images/attr_wind_icon.png","assets/images/attr_light_icon.png","assets/images/attr_divine_icon.png","assets/images/attr_water_icon.png","assets/images/attr_earth_icon.png","assets/images/attr_dark_icon.png","pages/edit_card.js","components/modal/EditModal.js","pages/edit_menu.js","components/inventory/DetailsPanel.js","pages/inventory.js","components/modal/AddModal.js","components/forms/MonsterForm.js","enums/SpellType.js","components/forms/NonMonsterForm.js","assets/images/rank_icon.png","assets/images/add_icon.png","assets/images/delete_icon.png","components/forms/MaterialMonsterForm.js","pages/add.js","assets/images/millenium_eye_trnp_1.png","components/Menu.js","pages/home.js","routes.js","App.js","index.js"],"names":["StockList","props","onClick","e","edit","state","cardName","target","innerText","includes","substring","indexOf","document","getElementsByClassName","style","left","getElementById","visibility","onSelectedCard","cardList","this","setState","list","Object","values","map","item","count","i","length","id","className","cardType","toLowerCase","displayList","formatListEntries","Component","Decks","console","log","margin","class","getDeckList","show","inventory","decks","currentMain","mainCount","currentExtra","extraCount","currentSide","sideCount","selectedDeck","getDecks","a","endpoint","window","location","origin","fetch","request","json","response","deck","main","extra","side","extraDeck","push","sideDeck","condenseCardList","sort","b","condensedList","buttonArea","textAlign","width","display","height","position","src","Scroll","alt","float","MonsterType","freeze","AQUA","BEAST","BEAST_WARRIOR","CREATOR_GOD","CYBERSE","DINOSAUR","DIVINE_BEAST","DRAGON","FAIRY","FIEND","FISH","INSECT","MACHINE","PLANT","PSYCHIC","PYRO","REPTILE","ROCK","SEA_SERPENT","SPELLCASTER","THUNDER","WARRIOR","WINGED_BEAST","WYRM","ZOMBIE","Ability","NONE","FLIP","GEMINI","SPIRIT","TOON","UNION","FUSION","XYZ","SYNCHRO","PENDULUM","LINK","Classification","EFFECT","NORMAL","SPECIAL_SUMMON","TUNER","EditCard","onAttributeSelect","query","cardInfo","number","lv","attr","type","ability","monsterClass","desc","atk","def","materials","tags","getCardByName","getTags","level","attribute","classification","description","tag","numberList","element","cardNo","attrIcon","cardNumberString","keys","getCardNumbers","toString","replace","marginRight","color","fontSize","marginTop","maxLength","autoComplete","defaultValue","marginLeft","verticalAlign","value","selected","option","onSelect","EditModal","handleClearModal","onCancel","handleEditModal","editCardInfo","bind","background","to","pathname","handleDeleteModal","Edit","classList","remove","add","updateCardList","handleSelectionChange","selectedCard","onEdit","onDelete","masterList","selectedType","getCardList","filterParam","filteredList","filter","array","symbol","valueList","result","concat","join","disabled","onConfirm","DetailsPane","formattedCardNo","modifiers","formattedModifiers","formattedMaterials","formattedDecks","formattedTags","undefined","FireIcon","WaterIcon","EarthIcon","WindIcon","DarkIcon","LightIcon","DivineIcon","row","LevelIcon","paddingRight","attributeIcon","getAttributeIcon","levelRow","getLevelIcons","Inventory","chosenOne","reduce","accumulator","val","combineCardNo","combineAttributeValues","AddModal","handleSubmitModal","addCard","clearForm","name","newCard","method","headers","body","JSON","stringify","message","tagList","toUpperCase","selectedIndex","radioButtons","getElementsByName","checked","bannerColour","formatMaterials","formatTags","formatModifiers","lvRow","padding","fontStyle","marginBottom","MonsterForm","setSelected","setDeckType","typeOptions","abilityOptions","classOptions","placeholder","for","onChange","required","minLength","borderBottom","fontFamily","maxWidth","multiple","SpellType","CONTINUOUS","EQUIP","FIELD","QUICK","RITUAL","NonMonsterForm","groupName","elements","MaterialMonsterForm","addMaterial","newMaterial","temp","deleteMaterial","selectedText","textContent","links","linkSection","abilitySelection","RankIcon","AddIcon","material","index","border","DeleteIcon","Add","filterForSelected","onSubmit","selectId","options","selectTags","filterMultiSelected","inputSelectValue","split","deckType","condensedTags","materialElements","formView","getForm","defaultChecked","Menu","MilleniumEye","Home","Main","path","component","EditMenu","App","ReactDOM","render","StrictMode","routes"],"mappings":"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","file":"static/js/main.a191b4c0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/deck_scroll.cf4f10fc.png\";","import { Component } from 'react';\r\nimport '../../styles/inventory.css';\r\n\r\nexport default class StockList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            cardList: props.cardList,\r\n            edit: props.edit\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            cardList: this.props.cardList,\r\n            edit: this.props.edit\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.state.cardList !== this.props.cardList) {\r\n            this.setState({\r\n                cardList: this.props.cardList\r\n            });\r\n        }\r\n    }\r\n\r\n    formatListEntries(list) {\r\n        let values = Object.values(list);\r\n\r\n        return (values.map((item) => {\r\n            let count = item[0].count;\r\n            for(let i=1; i < item.length; i++) {\r\n                count += item[i].count;\r\n            }\r\n            return (\r\n                <li \r\n                    id=\"inventoryItem\" \r\n                    className={item[0].cardType.toLowerCase() + \"Item\"} \r\n                    onClick={this.onClick}>\r\n                        {item[0].cardName + (count > 1 ? (\" (\" + count + \")\") : \"\")}\r\n                </li>)\r\n        }));\r\n    }\r\n\r\n    onClick = (e) => {\r\n        const { edit } = this.state;\r\n\r\n        let cardName = e.target.innerText.includes(' (') ? e.target.innerText.substring(0, e.target.innerText.indexOf(' (')) : e.target.innerText;\r\n\r\n        if (edit) {\r\n            this.props.onSelectedCard(cardName);\r\n        } else {\r\n            document.getElementsByClassName(\"inventoryList\")[0].style.left = \"25%\";\r\n            document.getElementById(\"detailsPanel\").style.visibility = \"visible\";\r\n            this.props.onSelectedCard(cardName);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { cardList } = this.state;\r\n        \r\n        let displayList = this.formatListEntries(cardList);\r\n        return (\r\n            <div>\r\n                <ul className='inventoryList'>\r\n                    {displayList}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n }","import { Component } from \"react\";\r\nimport \"../styles/commonThemes.css\";\r\nimport \"../styles/decks.css\";\r\nimport Scroll from '../assets/images/deck_scroll.png';\r\nimport StockList from \"../components/inventory/StockList\";\r\n\r\nexport default class Decks extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            inventory: {},\r\n            decks: [],\r\n            currentMain: [],\r\n            mainCount: 0,\r\n            currentExtra: [],\r\n            extraCount: 0,\r\n            currentSide: [],\r\n            sideCount: 0,\r\n            show: false,\r\n            selectedDeck: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDecks();\r\n    }\r\n\r\n    async getDecks() {\r\n        let endpoint = `${window.location.origin}/inventory/decks`;\r\n        let request = await fetch(endpoint);\r\n        let response = await request.json();\r\n\r\n        this.setState({\r\n            decks: response\r\n        });\r\n    }\r\n\r\n    async getDeckList(deck) {\r\n        let endpoint = `${window.location.origin}/inventory/deck/${deck}`;\r\n        let request = await fetch(endpoint);\r\n        let response = await request.json();\r\n\r\n        console.log(\"deckList\");\r\n        console.log(response);\r\n\r\n        let main = [];\r\n        let extra = [];\r\n        let side = [];\r\n\r\n        for (let i = 0; i < response.length; i++) {\r\n            if (response[i].extraDeck === true) {\r\n                extra.push(response[i]);\r\n            } else if (response[i].extraDeck === false && response[i].sideDeck === true) {\r\n                side.push(response[i]);\r\n            } else {\r\n                main.push(response[i]);\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            currentMain: this.condenseCardList(main),\r\n            currentExtra: this.condenseCardList(extra),\r\n            currentSide: this.condenseCardList(side),\r\n            mainCount: main.length,\r\n            extraCount: extra.length,\r\n            sideCount: side.length\r\n        });\r\n    }\r\n\r\n    condenseCardList(cardList) {\r\n        cardList.sort((a,b) => a.cardName > b.cardName ? 1 : -1);\r\n\r\n        let condensedList = {};\r\n        cardList.map((item) => {\r\n            condensedList[item.cardName] ? (condensedList[item.cardName].push(item)) : (condensedList[item.cardName] = [item])\r\n        });\r\n\r\n        return condensedList;\r\n    }\r\n\r\n    onClick = (e) => {\r\n        console.log(\"click\");\r\n        console.log(e);\r\n\r\n        document.getElementById(\"deckBtnArea\").style.margin = \"25px 150px\";\r\n        // if (document.getElementsByClassName(\"selectedDeck\")[0] !== null) {\r\n        //     document.getElementsByClassName(\"selectedDeck\")[0].className = \"\";\r\n        // }\r\n        document.getElementById(e.target.innerText).class = \"selectedDeck\";\r\n\r\n        this.getDeckList(e.target.innerText);\r\n        this.setState({\r\n            show: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { show, decks, currentMain, currentExtra, currentSide, mainCount, extraCount, sideCount } = this.state;\r\n\r\n        let buttonArea = decks.length > 7 ? (decks.length / 2) * 250 : 200;\r\n        decks.sort();\r\n\r\n        let instructions = \"Select a deck from the list to view the content of its Main Deck, Extra Deck, and Side Deck.\"\r\n\r\n        return (\r\n            <div className=\"contentWrapper\">\r\n                <div>\r\n                    <div id=\"header\" style={{textAlign: \"center\"}}>View Decks</div>\r\n                        <div id=\"description\" style={{width: \"500px\", margin: \"0 auto\"}}>\r\n                            <div style={{width: \"500px\", textAlign: \"center\"}}>{instructions}</div>\r\n                        </div>\r\n                    </div>\r\n                <div style={{display: \"flex\", margin: \"0 auto\", width: \"1200px\"}}>\r\n                    <div id=\"deckBtnArea\" style={{margin: \"25px auto\", width: buttonArea, height: \"350px\"}}>\r\n                        { decks ? decks.map(deck => {\r\n                            return <button id={deck} className=\"deckBtn\" onClick={this.onClick}>\r\n                                        <div style={{position: \"relative\", margin: \"0 auto\", height: \"50px\", width: \"200px\"}}>\r\n                                            <img src={Scroll} alt={deck + \" Deck Scroll\"} height=\"50px\" width=\"200px\" style={{position: \"absolute\", left: 0}}/>\r\n                                            <div className=\"btnText\">{deck}</div>\r\n                                        </div>\r\n                                    </button>\r\n                        }) : null }\r\n                    </div>\r\n                    {show ? \r\n                        <div id=\"deckListArea\" style={{width: \"500px\", float: \"right\"}}>\r\n                            <div id=\"mainDeck\">\r\n                                <h4 className=\"listHeader\">{\"Main Deck (\" + mainCount + \")\"}</h4>\r\n                                <StockList cardList={currentMain}/>\r\n                            </div>\r\n                            <div id=\"extraDeck\">\r\n                                <h4 className=\"listHeader\">{\"Extra Deck (\" + extraCount + \")\"}</h4>\r\n                                <StockList cardList={currentExtra}/>\r\n                            </div>\r\n                        </div> : null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","export const MonsterType = Object.freeze({\r\n    AQUA: \"Aqua\",\r\n    BEAST: \"Beast\",\r\n    BEAST_WARRIOR: \"Beast-Warrior\",\r\n    CREATOR_GOD: \"Creator God\",\r\n    CYBERSE: \"Cyberse\",\r\n    DINOSAUR: \"Dinosaur\",\r\n    DIVINE_BEAST: \"Divine Beast\",\r\n    DRAGON: \"Dragon\",\r\n    FAIRY: \"Fairy\",\r\n    FIEND: \"Fiend\",\r\n    FISH: \"Fish\",\r\n    INSECT: \"Insect\",\r\n    MACHINE: \"Machine\",\r\n    PLANT: \"Plant\",\r\n    PSYCHIC: \"Psychic\",\r\n    PYRO: \"Pyro\",\r\n    REPTILE: \"Reptile\",\r\n    ROCK: \"Rock\",\r\n    SEA_SERPENT: \"Sea Serpent\",\r\n    SPELLCASTER: \"Spellcaster\",\r\n    THUNDER: \"Thunder\",\r\n    WARRIOR: \"Warrior\",\r\n    WINGED_BEAST: \"Winged Beast\",\r\n    WYRM: \"Wyrm\",\r\n    ZOMBIE: \"Zombie\"\r\n});","export const Ability = Object.freeze({\r\n    NONE: \"None\",\r\n    FLIP: \"Flip\",\r\n    GEMINI: \"Gemini\",\r\n    SPIRIT: \"Spirit\",\r\n    TOON: \"Toon\",\r\n    UNION: \"Union\",\r\n    FUSION: \"Fusion\",\r\n    XYZ: \"Xyz\",\r\n    SYNCHRO: \"Synchro\",\r\n    PENDULUM: \"Pendulum\",\r\n    LINK: \"Link\",\r\n\r\n});","export const Classification = Object.freeze({\r\n    EFFECT: \"Effect\",\r\n    NORMAL: \"Normal\",\r\n    PENDULUM: \"Pendulum\",\r\n    SPECIAL_SUMMON: \"Special Summon\",\r\n    TUNER: \"Tuner\"\r\n});","export default __webpack_public_path__ + \"static/media/level_icon.b0d6fa4f.png\";","export default __webpack_public_path__ + \"static/media/attr_fire_icon.f71b71b3.png\";","export default __webpack_public_path__ + \"static/media/attr_wind_icon.f4ff73e3.png\";","export default __webpack_public_path__ + \"static/media/attr_light_icon.b0d78315.png\";","export default __webpack_public_path__ + \"static/media/attr_divine_icon.615c8e1a.png\";","export default __webpack_public_path__ + \"static/media/attr_water_icon.8cab52ad.png\";","export default __webpack_public_path__ + \"static/media/attr_earth_icon.d813cf74.png\";","export default __webpack_public_path__ + \"static/media/attr_dark_icon.82ef01b8.png\";","import { Component } from 'react';\r\nimport '../styles/commonThemes.css';\r\nimport '../styles/add.css';\r\nimport { MonsterType } from \"../enums/MonsterType\";\r\nimport { Ability } from \"../enums/Ability\";\r\nimport { Classification } from \"../enums/Classification\";\r\nimport LevelIcon from '../assets/images/level_icon.png';\r\nimport FireIcon from '../assets/images/attr_fire_icon.png';\r\nimport WindIcon from '../assets/images/attr_wind_icon.png';\r\nimport LightIcon from '../assets/images/attr_light_icon.png';\r\nimport DivineIcon from '../assets/images/attr_divine_icon.png';\r\nimport WaterIcon from '../assets/images/attr_water_icon.png';\r\nimport EarthIcon from '../assets/images/attr_earth_icon.png';\r\nimport DarkIcon from '../assets/images/attr_dark_icon.png';\r\n\r\nexport default class EditCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cardName: props.location.query.cardInfo,\r\n            cardInfo: [],\r\n            number: \"\",\r\n            lv: 0,\r\n            attr: \"\",\r\n            type: \"\",\r\n            ability: \"\",\r\n            monsterClass: \"\",\r\n            desc: \"\",\r\n            atk: 0,\r\n            def: 0,\r\n            count: 0,\r\n            materials: [],\r\n            decks: [],\r\n            tags: []\r\n            // zones: props.cardInfo.zones,\r\n            // pEffect: props.cardInfo.pEffect,\r\n            // redBound: props.cardInfo.redBound,\r\n            // blueBound: props.cardInfo.blueBound\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            cardName: this.props.location.query.cardInfo\r\n        });\r\n        this.getCardByName(this.props.location.query.cardInfo);\r\n        this.getDecks();\r\n        this.getTags();\r\n    }\r\n\r\n    // componentDidUpdate() {\r\n    //     if(this.props.cardInfo !== this.state.cardInfo) {\r\n    //         this.setState({\r\n    //             cardInfo: this.props.cardInfo\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n    async getDecks() {\r\n        let endpoint = `${window.location.origin}/inventory/decks`;\r\n        let request = await fetch(endpoint);\r\n        let response = await request.json();\r\n\r\n        this.setState({\r\n            decks: response\r\n        });\r\n\r\n    }\r\n\r\n    async getTags() {\r\n        let endpoint = `${window.location.origin}/inventory/tags`;\r\n        let request = await fetch(endpoint);\r\n        let response = await request.json();\r\n\r\n        this.setState({\r\n            tags: response\r\n        });\r\n    }\r\n\r\n    async getCardByName(cardName) {\r\n        let endpoint = `${window.location.origin}/inventory/name/${cardName}`;\r\n        let request = await fetch(endpoint);\r\n        let response = await request.json();\r\n\r\n        console.log(\"getCardByName\");\r\n        console.log(response);\r\n\r\n        this.setState({\r\n            cardInfo: response,\r\n            lv: response[0].level,\r\n            attr: response[0].attribute,\r\n            type: response[0].type,\r\n            ability: response[0].ability,\r\n            monsterClass: response[0].classification,\r\n            desc: response[0].description,\r\n            atk: response[0].atk,\r\n            def: response[0].def,\r\n            materials: response[0].materials,\r\n            tags: response[0].tag\r\n        });\r\n    }\r\n\r\n    getCardNumbers() {\r\n        const { cardInfo } = this.state;\r\n\r\n        let numberList = {};\r\n\r\n        cardInfo.map(element => {\r\n            numberList[element.cardNo] = element.deck\r\n        });\r\n\r\n        return numberList;\r\n    }\r\n\r\n    onAttributeSelect = (e) => {\r\n        console.log(\"onAttributeSelect\");\r\n        console.log(e.target);\r\n    }\r\n\r\n    render() {\r\n        const { cardInfo, cardName, attr, lv, type, monsterClass, desc, atk, def, deck, count, tag, materials, attrIcon } = this.state;\r\n\r\n        let typeOptions = Object.values(MonsterType);\r\n        let abilityOptions = Object.values(Ability);\r\n        let classOptions = Object.values(Classification);\r\n        let levelOptions = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ,11, 12];\r\n        let attrOptions = [\"Dark\", \"Divine\", \"Earth\", \"Fire\", \"Light\", \"Water\", \"Wind\"];\r\n        let tagInstructions = \"You can select one or more options from the list (Ctrl+Click to select multiple tags). If the tag(s) you wish to use is not in the list, use the accompanying text box to include it with this card (separate multiple tags with \\\"/\\\")\";\r\n        let editInstructions = \"All information edited on this page will modify the card information for all instances of cards with this name.\\nCard numbers, decks, and quantities are immutable.\";\r\n\r\n\r\n        console.log(\"edit card form\");\r\n        console.log(cardName);\r\n        console.log(cardInfo);\r\n        console.log(\"attr: \" + attr);\r\n        console.log(\"lv: \" + lv);\r\n        console.log(\"type: \" + type);\r\n        console.log(\"monsterClass: \" + monsterClass);\r\n        console.log(\"desc: \" + desc);\r\n        console.log(\"atk: \" + atk);\r\n        console.log(\"def: \" + def);\r\n        console.log(\"count: \" + count);\r\n        console.log(\"materials: \" + materials);\r\n\r\n        let cardNumberString = Object.keys(this.getCardNumbers()).toString().replace(',', ', ');\r\n\r\n        return (\r\n            cardInfo ? \r\n            <div className=\"contentWrapper\">\r\n                <div>\r\n                    <div id=\"header\" style={{textAlign: \"center\"}}>Edit Card</div>\r\n                    <div id=\"description\" style={{width: \"500px\", margin: \"0 auto\"}}/>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"495px\"}}>\r\n                    <div id=\"cardNo\" style={{marginRight: \"25px\", color: \"white\", fontSize: \"20px\"}}>{\"Card Number(s): \" + cardNumberString}</div>\r\n                    <div style={{display: 'flex', marginTop: \"15px\"}}>\r\n                        <div id=\"cardNameLabel\" style={{marginRight: \"25px\", width: \"120px\", color: \"white\", fontSize: \"20px\"}}>Card Name:</div>\r\n                        <input type=\"text\" id=\"cardNameInput\" className=\"basicInput\" maxLength=\"50\" autoComplete=\"off\" defaultValue={cardName} style={{width: \"350px\", float: 'right'}}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"495px\", margin: \"0 auto\"}}>\r\n                    <div style={{marginLeft: \"50px\", display: \"flex\", width: \"250px\"}}>\r\n                        <div id=\"lvLabel\" style={{marginRight: \"25px\", width: \"60px\", color: \"white\", fontSize: \"20px\"}}>Level:</div>\r\n                        <select id=\"levelSelect\" className=\"cardInfoSelect\" style={{float: \"right\", height: \"40px\", width: \"40px\", verticalAlign: \"middle\", textAlign: \"center\"}}>\r\n                            {levelOptions.map((level) => {\r\n                                return level === lv ? <option value={level} selected=\"selected\">{level}</option> : <option value={level}>{level}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"495px\", margin: \"10px auto\"}}>\r\n                    <div style={{display: \"flex\", width: \"250px\"}}>\r\n                        <div id=\"attrLabel\" style={{marginLeft: \"15px\", width: \"60px\", color: \"white\", fontSize: \"20px\"}}>Attribute:</div>\r\n                        <select id=\"attrSelect\" className=\"cardInfoSelect\" style={{marginLeft: \"55px\", float: \"right\", height: \"40px\", width: \"80px\", verticalAlign: \"middle\", textAlign: \"center\"}}>\r\n                            {attrOptions.map((option) => {\r\n                                return option === attr ? <option value={option} selected=\"selected\" onSelect={this.onAttributeSelect}>{option}</option> : <option value={option}>{option}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"formElement\" style={{width: \"520px\"}}>\r\n                    <div>\r\n                        <input type=\"radio\" id=\"fireRadio\" name=\"attrRadioGroup\" value=\"fire\" style={{fontSize: \"25px\"}} onChange={this.setSelected}/>\r\n                        <label for=\"fireRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={FireIcon} alt=\"Fire Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"windRadio\" name=\"attrRadioGroup\" value=\"wind\" onChange={this.setSelected}/>\r\n                        <label for=\"windRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={WindIcon} alt=\"Wind Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"waterRadio\" name=\"attrRadioGroup\" value=\"water\" onChange={this.setSelected}/>\r\n                        <label for=\"waterRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={WaterIcon} alt=\"Water Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"earthRadio\" name=\"attrRadioGroup\" value=\"earth\" onChange={this.setSelected}/>\r\n                        <label for=\"earthRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={EarthIcon} alt=\"Earth Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"lightRadio\" name=\"attrRadioGroup\" value=\"light\" onChange={this.setSelected}/>\r\n                        <label for=\"lightRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={LightIcon} alt=\"Light Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"darkRadio\" name=\"attrRadioGroup\" value=\"dark\" onChange={this.setSelected}/>\r\n                        <label for=\"darkRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={DarkIcon} alt=\"Dark Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"divineRadio\" name=\"attrRadioGroup\" value=\"divine\" onChange={this.setSelected}/>\r\n                        <label for=\"divineRadio\" style={{verticalAlign: \"middle\", paddingRight: \"0\"}}>\r\n                            <img src={DivineIcon} alt=\"Divine Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                    </div>\r\n                </div> */}\r\n                {/* <div className=\"formElement\" style={{width: \"650px\"}}> \r\n                    <div>\r\n                        <select id=\"typeSelect\" className=\"cardInfoSelect\" required>\r\n                            <option value=\"\" disabled selected>Select Type</option>\r\n                            {typeOptions.map((type) => {\r\n                                return <option value={type}>{type}</option>\r\n                            })}\r\n                        </select>\r\n                        <select id=\"abilitySelect\" className=\"cardInfoSelect\">\r\n                            <option value=\"\" disabled selected>Select Ability</option>\r\n                            {abilityOptions.map((ability) => {\r\n                                return <option value={ability}>{ability}</option>\r\n                            })}\r\n                        </select>\r\n                        <select id=\"classSelect\" className=\"cardInfoSelect\" style={{marginRight: \"0\"}}>\r\n                            <option value=\"\" disabled selected>Select Class</option>\r\n                            {classOptions.map((classification) => {\r\n                                return <option value={classification}>{classification}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div> */}\r\n                {/* <div className=\"formElement\" style={{width: \"600px\"}}>\r\n                    <div>\r\n                        <textarea id=\"descriptionText\" placeholder=\"Enter card description.\"/>\r\n                        <label for=\"descriptionText\"/>\r\n                    </div>\r\n                </div> */}\r\n                {/* <div className=\"formElement\" style={{width: \"325px\"}}>\r\n                    <span style={{fontSize: \"20px\", color: \"white\"}}>\r\n                        <label for=\"atkInput\">ATK: </label>\r\n                        <input id=\"atkInput\" className=\"basicInput atkDefInput\" maxLength=\"4\" minLength=\"1\"/>\r\n                        <label for=\"defInput\">DEF: </label>\r\n                        <input id=\"defInput\" className=\"basicInput atkDefInput\" maxLength=\"4\" minLength=\"1\"/>\r\n                    </span>\r\n                </div> */}\r\n                {/* <div style={{margin: \"50px auto\", borderBottom: \"2px solid white\", width: \"70%\"}}/> */}\r\n                {/* <div className=\"formElement\" style={{width: \"450px\"}}>\r\n                    <div style={{color: \"white\", fontFamily: \"EBGaramond, serif\"}}>\r\n                        <div style={{fontSize: \"26px\", textAlign: \"center\"}}>Card Metrics</div>\r\n                    </div>\r\n                </div> */}\r\n                {/* <div className=\"formElement\" style={{width: \"485px\"}}>\r\n                    <span>\r\n                        <select id=\"deckSelect\" className=\"cardInfoSelect\">\r\n                            <option value=\"\" disabled selected>Select Deck</option>\r\n                            {decks.map((deck) => {\r\n                                return <option value={deck}>{deck}</option>\r\n                            })}\r\n                        </select>\r\n                        <input id=\"deckInput\" className=\"basicInput\" style={{width: \"250px\"}} maxLength=\"20\" placeholder=\"Enter deck name\"/>\r\n                        <label for=\"deckInput\"/>\r\n                    </span>\r\n                </div> */}\r\n                {/* <div className=\"formElement\" style={{width: \"190px\"}}>\r\n                    <div style={{fontSize: \"20px\", color: \"white\"}}>\r\n                        <label for=\"countInput\">Count: </label>\r\n                        <input id=\"countInput\" className=\"basicInput\"/>\r\n                    </div>\r\n                </div> */}\r\n                {/* <div className=\"formElement\" style={{width: \"450px\", color: \"white\", fontFamily: \"EBGaramond, serif\"}}>\r\n                    <p style={{fontSize: \"18px\", textAlign: \"center\"}}>{tagInstructions}</p>\r\n                </div> */}\r\n                {/* <div className=\"formElement\" style={{width: \"485px\"}}>\r\n                    <span>\r\n                        <select id=\"tagSelect\" className=\"cardInfoSelect\" style={{height: \"250px\", maxWidth: \"200px\"}} multiple>\r\n                            {tags.map((tag) => {\r\n                                return <option value={tag}>{tag}</option>\r\n                            })}\r\n                        </select>\r\n                        <input id=\"tagInput\" className=\"basicInput\" style={{width: \"250px\", verticalAlign: \"top\"}} maxLength=\"70\" placeholder=\"Enter tag(s)\"/>\r\n                        <label for=\"tagInput\"/>\r\n                    </span>\r\n                </div> */}\r\n            </div>\r\n            : null\r\n        )\r\n    }\r\n}","import { Component } from \"react\";\r\nimport \"../../styles/commonThemes.css\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class EditModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: props.show,\r\n            cardInfo: props.cardInfo,\r\n            editCardInfo: []\r\n        }\r\n\r\n        this.handleClearModal = this.handleClearModal.bind(this);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            this.setState({\r\n                show: this.props.show\r\n            });\r\n        }\r\n\r\n        if (this.props.cardInfo !== this.state.cardInfo) {\r\n            this.setState({\r\n                cardInfo: this.props.cardInfo\r\n            });\r\n        }\r\n    }\r\n\r\n    handleClearModal = () => {\r\n        this.props.onCancel();\r\n    }\r\n\r\n    handleEditModal = () => {\r\n        const { cardInfo } = this.state;\r\n\r\n        console.log(\"handleEditModal\");\r\n\r\n        //make edit card form visible, then\r\n        this.getCardByName(cardInfo);\r\n        this.props.onCancel();\r\n    }\r\n\r\n    render() {\r\n        const { show, cardInfo } = this.state\r\n\r\n        console.log(\"cardInfo\");\r\n        console.log(cardInfo);\r\n\r\n        let bodyText = \"Do you want to edit information for all cards with this name, or delete one or more instances of cards with this card number?\"\r\n\r\n        return (\r\n            show ? \r\n            (<div className=\"modal\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\" style={{background: \"light grey\"}}>\r\n                        <h4 className=\"modal-title\">{\"Edit or Delete?\"}</h4>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        {bodyText}\r\n                    </div>\r\n                    <div className=\"modal-footer modal-button-wrapper\" style={{width: \"225px\", margin: \"0 auto\"}}>\r\n                        <Link to={{ pathname: \"/edit\", query: {cardInfo} }} style={{width: \"75px\", height: \"30px\"}}>\r\n                            <button id=\"modalEditBtn\" className=\"modal-button okBtn\">Edit</button>\r\n                        </Link>\r\n                        <button id=\"modalDeleteBtn\" className=\"modal-button ccBtn\" onClick={this.handleDeleteModal}>Delete</button>\r\n                        <button id=\"modalCancelBtn\" className=\"modal-button\" style={{marginLeft: \"15px\", background: \"grey\"}} onClick={this.handleClearModal}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>) : null\r\n        )\r\n    }\r\n}","import { Component } from \"react\";\r\nimport \"../styles/commonThemes.css\";\r\nimport \"../styles/inventory.css\";\r\nimport StockList from '../components/inventory/StockList';\r\nimport EditModal from '../components/modal/EditModal';\r\n\r\nexport default class Edit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            masterList: [],\r\n            cardList: [],\r\n            condensedList: [],\r\n            selectedType: \"All\",\r\n            selectedCard: \"\",\r\n            show: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCardList();\r\n    }\r\n\r\n    async getCardList() {\r\n        /*ELEPHANT: {cardType} is case sensitive. need to fix that in the AddCard endpoint \r\n            and then for the existing entries in repository \r\n        */\r\n        let endpoint = `${window.location.origin}/inventory`;\r\n        let request = await fetch(endpoint);\r\n        let response = await request.json();\r\n\r\n        this.setState({\r\n            masterList: response,\r\n            cardList: response\r\n        });\r\n        this.condenseCardList(response);\r\n    }\r\n\r\n    updateCardList(filterParam) {\r\n        const { masterList } = this.state;\r\n\r\n        let filteredList = (filterParam === \"All\") ? masterList : masterList.filter((item) => item.cardType === filterParam)\r\n        this.setState({\r\n            selectedType: filterParam,\r\n            cardList: filteredList\r\n        });\r\n        this.condenseCardList(filteredList);\r\n    }\r\n\r\n    condenseCardList(cardList) {\r\n        cardList.sort((a,b) => a.cardName > b.cardName ? 1 : -1);\r\n\r\n        let condensedList = {};\r\n        cardList.map((item) => {\r\n            condensedList[item.cardName] ? (condensedList[item.cardName].push(item)) : (condensedList[item.cardName] = [item])\r\n        });\r\n\r\n        this.setState({\r\n            condensedList: condensedList\r\n        });\r\n    }\r\n\r\n    onClick = (e) => {\r\n        document.getElementsByClassName(\"selected\")[0].classList.remove(\"selected\");\r\n        document.getElementById(e.target.id).classList.add(\"selected\");\r\n        document.getElementsByClassName(\"inventoryList\")[0].style.left = \"40%\";\r\n        if (document.getElementById(\"detailsPanel\")) { document.getElementById(\"detailsPanel\").style.visibility = \"hidden\"; }\r\n        this.updateCardList(e.target.innerText);\r\n    }\r\n\r\n    handleSelectionChange = (e) => {\r\n        this.setState({\r\n            selectedCard: e,\r\n            show: true\r\n        });\r\n    }\r\n\r\n    combineAttributeValues(array, attr, symbol) {\r\n        let valueList = [];\r\n        let result = [];\r\n\r\n        for(let i = 0; i < array.length; i++) {\r\n            valueList = valueList.concat(array[i][attr]);\r\n        }\r\n\r\n        result.push(valueList[0]);\r\n        for(let i = 1; i < valueList.length; i++) {\r\n            if (!result.includes(valueList[i])) {\r\n                result.push(valueList[i]);\r\n            }\r\n        }\r\n\r\n        return (result.length > 1 ? result.join(symbol) : result[0]);\r\n    }\r\n\r\n    combineCardNo(array) {\r\n        // CardNo is the primary key and should be unique across the database\r\n        let result = [];\r\n        for (let i = 0; i < array.length; i++) {\r\n            result.push(array[i].cardNo);\r\n        }\r\n        return (result.length > 1 ? result.join(\" / \") : result[0]);\r\n    }\r\n\r\n    onEdit = (e) => {\r\n        console.log(\"update repository\");\r\n    }\r\n\r\n    onDelete = (e) => {\r\n        console.log(\"update repository\");\r\n    }\r\n\r\n    onCancel = () => {\r\n        this.setState({\r\n            show: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { condensedList, selectedCard, show } = this.state;\r\n\r\n        console.log(\"edit\");\r\n        console.log(selectedCard);\r\n\r\n        return (\r\n            <div className=\"contentWrapper\">\r\n                <div style={{margin: \"200px auto 0 auto\", width: \"850px\"}}>\r\n                    <button id=\"allBtn\" className=\"sortButton selected\" onClick={this.onClick}>All</button>\r\n                    <button id=\"monsterBtn\" className=\"sortButton\" onClick={this.onClick}>Monster</button>\r\n                    <button id=\"spellBtn\" className=\"sortButton\" onClick={this.onClick}>Spell</button>\r\n                    <button id=\"trapBtn\" className=\"sortButton\" onClick={this.onClick}>Trap</button>\r\n                    <button id=\"pendulumBtn\" className=\"sortButton\" onClick={this.onClick} disabled>Pendulum</button>\r\n                    <button id=\"fusionBtn\" className=\"sortButton\" onClick={this.onClick}>Fusion</button>\r\n                    <button id=\"xyzBtn\" className=\"sortButton\" onClick={this.onClick} disabled>Xyz</button>\r\n                    <button id=\"synchroBtn\" className=\"sortButton\" onClick={this.onClick} disabled>Synchro</button>\r\n                    <button id=\"linkBtn\" className=\"sortButton\" onClick={this.onClick}disabled>Link</button>\r\n                </div>\r\n                <StockList cardList={condensedList} edit={true} onSelectedCard={this.handleSelectionChange}/>\r\n                <EditModal cardInfo={selectedCard} show={show} onEdit={this.onEdit} onConfirm={this.onDelete} onCancel={this.onCancel}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import { Component } from 'react';\r\nimport '../../styles/inventoryDetails.css';\r\nimport LevelIcon from '../../assets/images/level_icon.png';\r\nimport FireIcon from '../../assets/images/attr_fire_icon.png';\r\nimport WindIcon from '../../assets/images/attr_wind_icon.png';\r\nimport LightIcon from '../../assets/images/attr_light_icon.png';\r\nimport DivineIcon from '../../assets/images/attr_divine_icon.png';\r\nimport WaterIcon from '../../assets/images/attr_water_icon.png';\r\nimport EarthIcon from '../../assets/images/attr_earth_icon.png';\r\nimport DarkIcon from '../../assets/images/attr_dark_icon.png';\r\n\r\nexport default class DetailsPane extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cardInfo: props.cardInfo,\r\n            cardName: props.cardName,\r\n            attr: props.attr,\r\n            level: props.level,\r\n            desc: props.desc,\r\n            atk: props.atk,\r\n            def: props.def,\r\n            cardNo: props.formattedCardNo,\r\n            modifiers: props.formattedModifiers,\r\n            materials: props.formattedMaterials,\r\n            decks: props.formattedDecks,\r\n            tags: props.formattedTags,\r\n            count: props.count\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.cardInfo === undefined) {\r\n            this.setState({\r\n                cardInfo: []\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.cardInfo !== this.props.cardInfo) {\r\n            this.setState({\r\n                cardInfo: this.props.cardInfo\r\n            });\r\n        }\r\n\r\n        if (this.state.cardName !== this.props.cardName) {\r\n            this.setState({\r\n                cardName: this.props.cardName,\r\n                attr: this.props.attr,\r\n                level: this.props.level,\r\n                desc: this.props.desc,\r\n                atk: this.props.atk,\r\n                def: this.props.def,\r\n                modifiers: this.props.formattedModifiers,\r\n                cardNo: this.props.formattedCardNo,\r\n                decks: this.props.formattedDecks,\r\n                tags: this.props.formattedTags,\r\n                count: this.props.count\r\n            });\r\n        }\r\n    }\r\n\r\n    getAttributeIcon() {\r\n        const { attr } = this.state;\r\n\r\n        switch (attr) {\r\n            case \"fire\":\r\n                return FireIcon;\r\n            case \"water\":\r\n                return WaterIcon;\r\n            case \"earth\":\r\n                return EarthIcon;\r\n            case \"wind\":\r\n                return WindIcon;\r\n            case \"dark\":\r\n                return DarkIcon;\r\n            case \"light\":\r\n                return LightIcon;\r\n            default:\r\n                return DivineIcon;\r\n        }\r\n    }\r\n\r\n    getLevelIcons() {\r\n        const { level } = this.state;\r\n\r\n        let row = []\r\n        for (let i = 0; i < level; i++) {\r\n            row.push(<img src={LevelIcon} alt=\"Level\" height=\"25px\" width=\"25px\" style={{paddingRight: \"10px\", verticalAlign: \"middle\"}}/>);\r\n        }\r\n        return row;\r\n    }\r\n\r\n    render() {\r\n        const { cardInfo, cardName, level, desc, atk, def, cardNo, materials, modifiers, decks, tags, count } = this.state;\r\n\r\n        let attributeIcon = this.getAttributeIcon();\r\n        let levelRow = this.getLevelIcons();\r\n\r\n        return (\r\n            cardInfo ?\r\n                <span id=\"detailsPanel\" className=\"detailsPanel\">\r\n                    <div id=\"cardTitle\" style={{fontSize: \"20px\", marginTop: \"0px\"}}>{cardName}</div>\r\n                    <div id=\"cardNo\" style={{fontSize: \"14px\"}}>{cardNo}</div>\r\n                    <div id=\"attribute\" style={{width: \"400px\", height: \"25px\", margin: \"0 auto\", verticalAlign: \"middle\"}}>{attributeIcon}</div>\r\n                    \r\n                    {level ? <div style={{width: \"400px\", height: \"25px\", margin: \"0 auto\", verticalAlign: \"middle\"}}>\r\n                                {levelRow}\r\n                            </div> : null}\r\n                    <div id=\"type\" style={{fontSize: \"18px\"}}>{modifiers}</div>\r\n                    {materials ? materials : null}\r\n                    <div id=\"desc\" style={{fontSize: \"16px\"}}>{desc}</div>\r\n                    {atk ? <div id=\"atkDef\">\r\n                        <span id={\"atk\"}>{\"ATK: \" + atk}</span>\r\n                        <span> / </span>\r\n                        <span id={\"def\"}>{\"DEF: \" + def}</span>\r\n                    </div> : <span/>}\r\n                    <div id=\"count\">{count}</div>\r\n                    <div id=\"decks\">{decks}</div>\r\n                    <div id=\"tags\">{tags}</div>\r\n                </span> :\r\n                <div/>\r\n        )\r\n    }\r\n}","import { Component } from 'react';\r\nimport StockList from '../components/inventory/StockList';\r\nimport DetailsPanel from '../components/inventory/DetailsPanel'\r\n\r\nexport default class Inventory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            masterList: [],\r\n            cardList: [],\r\n            condensedList: [],\r\n            selectedType: \"All\",\r\n            selectedCard: \"\"\r\n        }\r\n    }\r\n\r\n    /* ELEPHANT: Add api mapping for inventory?=[cardType], where cardType is monster, spell, trap, etc */\r\n\r\n    componentDidMount() {\r\n        this.getCardList();\r\n        // this.getCardList(\"Monster\");\r\n    }\r\n\r\n    async getCardList() {\r\n        /*ELEPHANT: {cardType} is case sensitive. need to fix that in the AddCard endpoint \r\n            and then for the existing entries in repository \r\n        */\r\n        let endpoint = `${window.location.origin}/inventory`;\r\n        let request = await fetch(endpoint);\r\n        let response = await request.json();\r\n\r\n        this.setState({\r\n            masterList: response,\r\n            cardList: response\r\n        });\r\n        this.condenseCardList(response);\r\n    }\r\n\r\n    updateCardList(filterParam) {\r\n        const { masterList } = this.state;\r\n\r\n        let filteredList = (filterParam === \"All\") ? masterList : masterList.filter((item) => item.cardType === filterParam)\r\n        this.setState({\r\n            selectedType: filterParam,\r\n            cardList: filteredList\r\n        });\r\n        this.condenseCardList(filteredList);\r\n    }\r\n\r\n    condenseCardList(cardList) {\r\n        cardList.sort((a,b) => a.cardName > b.cardName ? 1 : -1);\r\n\r\n        let condensedList = {};\r\n        cardList.map((item) => {\r\n            condensedList[item.cardName] ? (condensedList[item.cardName].push(item)) : (condensedList[item.cardName] = [item])\r\n        });\r\n\r\n        this.setState({\r\n            condensedList: condensedList\r\n        });\r\n    }\r\n\r\n    onClick = (e) => {\r\n        document.getElementsByClassName(\"selected\")[0].classList.remove(\"selected\");\r\n        document.getElementById(e.target.id).classList.add(\"selected\");\r\n        document.getElementsByClassName(\"inventoryList\")[0].style.left = \"40%\";\r\n        if (document.getElementById(\"detailsPanel\")) { document.getElementById(\"detailsPanel\").style.visibility = \"hidden\"; }\r\n        this.updateCardList(e.target.innerText);\r\n    }\r\n\r\n    handleSelectionChange = (e) => {\r\n        this.setState({\r\n            selectedCard: e\r\n        });\r\n    }\r\n\r\n    combineAttributeValues(array, attr, symbol) {\r\n        let valueList = [];\r\n        let result = [];\r\n\r\n        for(let i = 0; i < array.length; i++) {\r\n            valueList = valueList.concat(array[i][attr]);\r\n        }\r\n\r\n        result.push(valueList[0]);\r\n        for(let i = 1; i < valueList.length; i++) {\r\n            if (!result.includes(valueList[i])) {\r\n                result.push(valueList[i]);\r\n            }\r\n        }\r\n\r\n        return (result.length > 1 ? result.join(symbol) : result[0]);\r\n    }\r\n\r\n    combineCardNo(array) {\r\n        // CardNo is the primary key and should be unique across the database\r\n        let result = [];\r\n        for (let i = 0; i < array.length; i++) {\r\n            result.push(array[i].cardNo);\r\n        }\r\n        return (result.length > 1 ? result.join(\" / \") : result[0]);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const { cardList, condensedList, selectedCard } = this.state;\r\n\r\n        //TODO: HOW THE FORK DID I FORGET ABOUT RITUAL MONSTERS?!?!?!?!?\r\n        //TODO: AND TOKENS!!! --CRIES--\r\n        let chosenOne = condensedList[selectedCard];\r\n        let cardName, attr, level,\r\n            desc, atk, def, \r\n            count, formattedCardNo, formattedModifiers, \r\n            formattedMaterials, formattedDecks, formattedTags;\r\n\r\n        if (chosenOne !== undefined) {\r\n            console.log(\"chosenOne\");\r\n            console.log(chosenOne);\r\n            cardName = chosenOne[0].cardName;\r\n            attr = chosenOne[0].attribute;\r\n            level = chosenOne[0].level === 0 ? null : chosenOne[0].level;\r\n            desc = chosenOne[0].description;\r\n            atk = chosenOne[0].atk;\r\n            def = chosenOne[0].def;\r\n            count = chosenOne.reduce(((accumulator,val) => accumulator + val.count), 0);\r\n            formattedCardNo = this.combineCardNo(chosenOne);\r\n            formattedDecks = this.combineAttributeValues(chosenOne, \"deck\", \" / \");\r\n            if (chosenOne[0].cardType === \"Spell\" || chosenOne[0].cardType === \"Trap\") {\r\n                formattedModifiers = chosenOne[0].type;\r\n            } else if (chosenOne[0].cardType !== \"Spell\" && chosenOne[0].cardType !== \"Trap\" && chosenOne[0].ability) {\r\n                formattedModifiers = chosenOne[0].type + \" / \" + chosenOne[0].ability + \" / \" + chosenOne[0].classification;\r\n            } else {\r\n                formattedModifiers = chosenOne[0].type + \" / \" + chosenOne[0].classification;\r\n            }\r\n            let materials = chosenOne[0].materials;\r\n            if (materials) { formattedMaterials = \"(\" + (materials.length > 1 ? materials.join(\" + \") : materials[0]) + \")\";}\r\n            formattedTags = this.combineAttributeValues(chosenOne, \"tag\", \" / \");\r\n        }\r\n\r\n        return (\r\n            <div style={{position: \"relative\"}}>\r\n                <span style={{position: \"absolute\", width: \"100%\", marginTop: \"10%\", marginLeft: \"25%\"/*, left: \"30%\"*/}}>\r\n                    <button id=\"allBtn\" className=\"sortButton selected\" onClick={this.onClick}>All</button>\r\n                    <button id=\"monsterBtn\" className=\"sortButton\" onClick={this.onClick}>Monster</button>\r\n                    <button id=\"spellBtn\" className=\"sortButton\" onClick={this.onClick}>Spell</button>\r\n                    <button id=\"trapBtn\" className=\"sortButton\" onClick={this.onClick}>Trap</button>\r\n                    <button id=\"pendulumBtn\" className=\"sortButton\" onClick={this.onClick} disabled>Pendulum</button>\r\n                    <button id=\"fusionBtn\" className=\"sortButton\" onClick={this.onClick}>Fusion</button>\r\n                    <button id=\"xyzBtn\" className=\"sortButton\" onClick={this.onClick} disabled>Xyz</button>\r\n                    <button id=\"synchroBtn\" className=\"sortButton\" onClick={this.onClick} disabled>Synchro</button>\r\n                    <button id=\"linkBtn\" className=\"sortButton\" onClick={this.onClick}disabled>Link</button>\r\n                </span>\r\n                <StockList cardList={condensedList} edit={false} onSelectedCard={this.handleSelectionChange}/>\r\n                {cardList ? \r\n                    <div>\r\n                        <DetailsPanel \r\n                            cardInfo={cardList[cardList.length - 1]} \r\n                            cardName={cardName}\r\n                            attr={attr}\r\n                            level={level}\r\n                            desc={desc}\r\n                            atk={atk}\r\n                            def={def}\r\n                            formattedCardNo={formattedCardNo}\r\n                            formattedModifiers={formattedModifiers} \r\n                            formattedMaterials={formattedMaterials}\r\n                            formattedDecks={formattedDecks} \r\n                            formattedTags={formattedTags}\r\n                            count={count}>\r\n                        </DetailsPanel>\r\n                    </div>\r\n                    : <div/>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import { Component } from \"react\";\r\nimport \"../../styles/commonThemes.css\"\r\nimport LevelIcon from '../../assets/images/level_icon.png';\r\nimport FireIcon from '../../assets/images/attr_fire_icon.png';\r\nimport WindIcon from '../../assets/images/attr_wind_icon.png';\r\nimport LightIcon from '../../assets/images/attr_light_icon.png';\r\nimport DivineIcon from '../../assets/images/attr_divine_icon.png';\r\nimport WaterIcon from '../../assets/images/attr_water_icon.png';\r\nimport EarthIcon from '../../assets/images/attr_earth_icon.png';\r\nimport DarkIcon from '../../assets/images/attr_dark_icon.png';\r\n\r\nexport default class AddModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: props.show,\r\n            cardInfo: props.cardInfo,\r\n            cardType: props.cardInfo.cardType,\r\n            name: props.cardInfo.cardName,\r\n            number: props.cardInfo.cardNo,\r\n            lv: props.cardInfo.level,\r\n            attr: props.cardInfo.attribute,\r\n            type: props.cardInfo.type,\r\n            ability: props.cardInfo.ability,\r\n            monsterClass: props.cardInfo.class,\r\n            desc: props.cardInfo.description,\r\n            atk: props.cardInfo.atk,\r\n            def: props.cardInfo.def,\r\n            deck: props.cardInfo.deck,\r\n            count: props.cardInfo.count,\r\n            tag: props.cardInfo.tag,\r\n            materials: props.cardInfo.materials,\r\n            // zones: props.cardInfo.zones,\r\n            // pEffect: props.cardInfo.pEffect,\r\n            // redBound: props.cardInfo.redBound,\r\n            // blueBound: props.cardInfo.blueBound\r\n        }\r\n\r\n        this.handleClearModal = this.handleClearModal.bind(this);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            this.setState({\r\n                show: this.props.show\r\n            });\r\n        }\r\n\r\n        if (this.props.cardInfo !== this.state.cardInfo) {\r\n            this.setState({\r\n                cardInfo: this.props.cardInfo,\r\n                cardType: this.props.cardInfo.cardType,\r\n                name: this.props.cardInfo.cardName,\r\n                number: this.props.cardInfo.cardNo,\r\n                lv: this.props.cardInfo.level,\r\n                attr: this.props.cardInfo.attribute,\r\n                type: this.props.cardInfo.type,\r\n                ability: this.props.cardInfo.ability,\r\n                monsterClass: this.props.cardInfo.class,\r\n                desc: this.props.cardInfo.description,\r\n                atk: this.props.cardInfo.atk,\r\n                def: this.props.cardInfo.def,\r\n                deck: this.props.cardInfo.deck,\r\n                count: this.props.cardInfo.count,\r\n                tag: this.props.cardInfo.tag,\r\n                materials: this.props.cardInfo.materials,\r\n                // zones: this.props.cardInfo.zones,\r\n                // pEffect: this.props.cardInfo.pEffect,\r\n                // redBound: this.props.cardInfo.redBound,\r\n                // blueBound: this.props.cardInfo.blueBound\r\n            });\r\n        }\r\n    }\r\n\r\n    async addCard(newCard) {\r\n        let endpoint = `${window.location.origin}/add`;\r\n        let request = await fetch(endpoint, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newCard)\r\n        });\r\n        let response = await request.json();\r\n\r\n        console.log(response);\r\n        console.log(response.message);\r\n    }\r\n\r\n    bannerColour() {\r\n        const { cardType } = this.state;\r\n\r\n        switch (cardType) {\r\n            case \"Spell\":\r\n                return \"#1D9E74\";\r\n            case \"Trap\":\r\n                return \"#BC5A84\";\r\n            case \"Pendulum\":\r\n                return \"#1D9E74\"; //figure out how to make a gradient; gradient to white\r\n            case \"Ritual\":\r\n                return \"#9DB5CC\";\r\n            case \"Fusion\":\r\n                return \"#A086B7\";\r\n            case \"Synchro\":\r\n                return \"#CCCCCC\";\r\n            case \"Xyz\":\r\n                return \"#000\";\r\n            case \"Link\":\r\n                return \"#00008B\";\r\n            case \"Token\":\r\n                return \"#C0C0C0\";\r\n            default:\r\n                return \"#FF8B53\"; //Monster\r\n        }\r\n    }\r\n\r\n    getAttributeIcon() {\r\n        const { attr } = this.state;\r\n\r\n        switch (attr) {\r\n            case \"fire\":\r\n                return FireIcon;\r\n            case \"water\":\r\n                return WaterIcon;\r\n            case \"earth\":\r\n                return EarthIcon;\r\n            case \"wind\":\r\n                return WindIcon;\r\n            case \"dark\":\r\n                return DarkIcon;\r\n            case \"light\":\r\n                return LightIcon;\r\n            default:\r\n                return DivineIcon;\r\n        }\r\n    }\r\n\r\n    getLevelIcons() {\r\n        const { lv } = this.state;\r\n\r\n        let row = []\r\n        for (let i = 0; i < lv; i++) {\r\n            row.push(<img src={LevelIcon} alt=\"Level\" height=\"25px\" width=\"25px\" style={{paddingRight: \"10px\", verticalAlign: \"middle\"}}/>);\r\n        }\r\n        return row;\r\n    }\r\n\r\n    formatMaterials(materials) {\r\n        let result = \"(\";\r\n\r\n        for (let i=0; i < materials.length; i++) {\r\n            result += \"\\\"\" + materials[i] + \"\\\"\"\r\n            if (i === materials.length - 1) {result += \")\"}\r\n            else { result += \" + \" }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    formatTags(tags) {\r\n        let tagList = \"\";\r\n\r\n        for (let i=0; i < tags.length; i++) {\r\n            tagList += tags[i]\r\n            if (i !== tags.length - 1) { tagList += \", \"; }\r\n        }\r\n\r\n        return tagList;\r\n    }\r\n\r\n    formatModifiers() {\r\n        const { cardType, type, ability, monsterClass } = this.state;\r\n\r\n        console.log(\"ability\");\r\n        console.log(ability);\r\n\r\n        if (cardType === \"Spell\" || cardType === \"Trap\") {\r\n            return type;\r\n        } else if (ability === null) {\r\n            return \"[\" + type.toUpperCase() + \" / \" + monsterClass.toUpperCase() + \"]\";\r\n        } else {\r\n            return \"[\" + type.toUpperCase() + \" / \" + ability.toUpperCase() + \" / \" + monsterClass.toUpperCase() + \"]\";\r\n        }\r\n    }\r\n\r\n    clearForm() {\r\n        const { cardType } = this.state;\r\n\r\n        //Stuff all cards have\r\n        document.getElementById(\"cardNoInput\").value = \"\";\r\n        document.getElementById(\"cardNameInput\").value = \"\";\r\n        document.getElementById(\"descriptionText\").value = \"\";\r\n        document.getElementById(\"deckInput\").value = \"\";\r\n        document.getElementById(\"countInput\").value = \"\";\r\n        document.getElementById(\"tagInput\").value = \"\";\r\n        document.getElementById(\"typeSelect\").selectedIndex = -1;\r\n        document.getElementById(\"deckSelect\").selectedIndex = -1;\r\n        document.getElementById(\"tagSelect\").selectedIndex = -1;\r\n\r\n        if (cardType !== \"Spell\" && cardType !== \"Trap\") {\r\n\r\n            document.getElementById(\"atkInput\").value = \"\";\r\n            document.getElementById(\"defInput\").value = \"\";\r\n            document.getElementById(\"levelSelect\").selectedIndex = -1;\r\n            document.getElementById(\"abilitySelect\").selectedIndex = -1;\r\n            document.getElementById(\"classSelect\").selectedIndex = -1;\r\n\r\n            let radioButtons = document.getElementsByName(\"attrRadioGroup\");\r\n            for (let i=0; i < radioButtons.length; i++) {\r\n                radioButtons[i].checked = false;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    handleClearModal = () => {\r\n        this.props.onCancel();\r\n    }\r\n\r\n    handleSubmitModal = () => {\r\n        const { cardInfo } = this.state;\r\n\r\n        console.log(\"handleSubmitModal\");\r\n        console.log(cardInfo);\r\n        \r\n        this.addCard(cardInfo);\r\n        this.clearForm();\r\n        this.props.onCancel();\r\n    }\r\n\r\n    render() {\r\n        const { show, cardType, name, number, attr, lv, type, monsterClass, desc, atk, def, deck, count, tag, materials } = this.state\r\n\r\n        let bannerColour = this.bannerColour();\r\n        let formattedMaterials = materials ? <div>{this.formatMaterials(materials)}</div> : null;\r\n        let formattedTags = tag ? <div>{\"Tags: \" + this.formatTags(tag)}</div> : null;\r\n        let formattedModifiers = type ? this.formatModifiers() : null;\r\n        let attributeIcon = this.getAttributeIcon();\r\n        let lvRow = lv ? this.getLevelIcons() : null;\r\n\r\n        return (\r\n            show ? \r\n            (<div className=\"modal\">\r\n                <div className=\"modal-content\" style={{background: bannerColour}}>\r\n                    <div className=\"modal-header\">\r\n                        <h4 className=\"modal-title\">{\"Confirm \" + cardType + \" Card Submission\"}</h4>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <div style={{background: \"#FFFFFF80\", padding: \"10px\", fontSize: \"20px\"}}>\r\n                            <div style={{textAlign: \"center\"}}>{name}</div>\r\n                            {attr ? \r\n                                <div style={{width: \"150px\", verticalAlign: \"middle\", margin: \"0 auto\"}}>\r\n                                    <img src={attributeIcon} alt=\"Attribute\" height=\"25px\" width=\"25px\" style={{paddingRight: \"10px\", verticalAlign: \"middle\"}}/>\r\n                                </div> \r\n                                : null}\r\n                            {lv ? <div style={{width: \"400px\", height: \"25px\", margin: \"0 auto\", verticalAlign: \"middle\"}}>\r\n                                {lvRow}\r\n                            </div> : null}\r\n                            <div>{number}</div>\r\n                            {formattedMaterials}\r\n                            <div>\r\n                                {monsterClass ? formattedModifiers : type}\r\n                            </div>\r\n                            <div style={{width: \"400px\", margin: \"10px auto\", fontSize: \"16px\", fontStyle: \"italic\", textAlign: \"center\"}}>{desc}</div>\r\n                            {atk ? <div>{\"ATK/\" + atk + \"  DEF/\" + def}</div> : null}\r\n                            <div>{deck + \" Deck (\" + count + \")\"}</div>\r\n                            {formattedTags}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer modal-button-wrapper\">\r\n                        <div style={{textAlign: \"center\", fontSize: \"20px\", marginBottom: \"25px\"}}>Is the above information correct?</div>\r\n                        <div style={{width: \"200px\", marginRight: 0}}>\r\n                            <button id=\"modalOK\" className=\"modal-button okBtn\" onClick={this.handleSubmitModal}>Confirm</button>\r\n                            <button id=\"modalCancel\" className=\"modal-button ccBtn\" onClick={this.handleClearModal}>Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>) : null\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport \"../../styles/commonThemes.css\";\r\nimport \"../../styles/add.css\";\r\nimport { MonsterType } from \"../../enums/MonsterType\";\r\nimport { Ability } from \"../../enums/Ability\";\r\nimport { Classification } from \"../../enums/Classification\";\r\nimport LevelIcon from '../../assets/images/level_icon.png';\r\nimport FireIcon from '../../assets/images/attr_fire_icon.png';\r\nimport WindIcon from '../../assets/images/attr_wind_icon.png';\r\nimport LightIcon from '../../assets/images/attr_light_icon.png';\r\nimport DivineIcon from '../../assets/images/attr_divine_icon.png';\r\nimport WaterIcon from '../../assets/images/attr_water_icon.png';\r\nimport EarthIcon from '../../assets/images/attr_earth_icon.png';\r\nimport DarkIcon from '../../assets/images/attr_dark_icon.png';\r\n\r\nexport default class MonsterForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cardType: \"\",\r\n            decks: [],\r\n            tags: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDecks();\r\n        this.getTags();\r\n    }\r\n\r\n    async getDecks() {\r\n        let endpoint = `${window.location.origin}/inventory/decks`;\r\n        let request = await fetch(endpoint);\r\n        let response = await request.json();\r\n\r\n        this.setState({\r\n            decks: response\r\n        });\r\n\r\n    }\r\n\r\n    async getTags() {\r\n        let endpoint = `${window.location.origin}/inventory/tags`;\r\n        let request = await fetch(endpoint);\r\n        let response = await request.json();\r\n\r\n        this.setState({\r\n            tags: response\r\n        });\r\n    }\r\n\r\n    setSelected = (e) => {\r\n        if (document.getElementsByClassName(\"attrSelected\")[0]) {\r\n            document.getElementsByClassName(\"attrSelected\")[0].className = \"\";\r\n        }\r\n        document.getElementById(e.target.id).className = \"attrSelected\";\r\n    }\r\n\r\n    setDeckType = (e) => {\r\n        if (document.getElementsByClassName(\"deckTypeSelected\")[0]) {\r\n            document.getElementsByClassName(\"deckTypeSelected\")[0].className = \"\";\r\n        }\r\n        document.getElementById(e.target.id).className = \"deckTypeSelected\";\r\n    }\r\n\r\n    render() {\r\n        const { decks, tags } = this.state;\r\n\r\n        let typeOptions = Object.values(MonsterType);\r\n        let abilityOptions = Object.values(Ability);\r\n        let classOptions = Object.values(Classification);\r\n        let levelOptions = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ,11, 12];\r\n        let decksInstructions = \"If this card belongs to a deck already in the database, please select that deck from the dropdown. Otherwise, you may enter it in the accompanying text box.\";\r\n        let tagInstructions = \"You can select one or more options from the list (Ctrl+Click to select multiple tags). If the tag(s) you wish to use is not in the list, use the accompanying text box to include it with this card (separate multiple tags with \\\"/\\\")\";\r\n\r\n        //ELEPHANT: Add info i for each field\r\n        //ELEPHANT: Check tag input content (only alpha-num char) against selections from tag list. select element has priority\r\n\r\n        return (\r\n            <div className=\"contentWrapper\">\r\n                <div className=\"formElement\" style={{width: \"495px\"}}>\r\n                    <div>\r\n                        <input type=\"text\" placeholder=\"Card Number\" id=\"cardNoInput\" className=\"basicInput\" maxLength=\"10\" autoComplete=\"off\" style={{marginRight: \"25px\"}}></input>\r\n                        <input type=\"text\" placeholder=\"Card Name\" id=\"cardNameInput\" className=\"basicInput\" maxLength=\"50\" autoComplete=\"off\" style={{width: \"350px\"}}></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"210px\"}}>\r\n                    <label for=\"levelSelect\" style={{verticalAlign: \"middle\"}}>\r\n                        <img src={LevelIcon} alt=\"Monster Level Icon\" height=\"40px\" width=\"40px\"/>\r\n                    </label>\r\n                    <select id=\"levelSelect\" className=\"cardInfoSelect\" style={{width: \"125px\", verticalAlign: \"middle\"}}>\r\n                        <option value=\"\" disabled selected>Select Level</option>\r\n                        {levelOptions.map((level) => {\r\n                            return <option value={level}>{level}</option>\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"520px\"}}>\r\n                    <div>\r\n                        <input type=\"radio\" id=\"fireRadio\" name=\"attrRadioGroup\" value=\"fire\" style={{fontSize: \"25px\"}} onChange={this.setSelected}/>\r\n                        <label for=\"fireRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={FireIcon} alt=\"Fire Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"windRadio\" name=\"attrRadioGroup\" value=\"wind\" onChange={this.setSelected}/>\r\n                        <label for=\"windRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={WindIcon} alt=\"Wind Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"waterRadio\" name=\"attrRadioGroup\" value=\"water\" onChange={this.setSelected}/>\r\n                        <label for=\"waterRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={WaterIcon} alt=\"Water Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"earthRadio\" name=\"attrRadioGroup\" value=\"earth\" onChange={this.setSelected}/>\r\n                        <label for=\"earthRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={EarthIcon} alt=\"Earth Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"lightRadio\" name=\"attrRadioGroup\" value=\"light\" onChange={this.setSelected}/>\r\n                        <label for=\"lightRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={LightIcon} alt=\"Light Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"darkRadio\" name=\"attrRadioGroup\" value=\"dark\" onChange={this.setSelected}/>\r\n                        <label for=\"darkRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={DarkIcon} alt=\"Dark Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"divineRadio\" name=\"attrRadioGroup\" value=\"divine\" onChange={this.setSelected}/>\r\n                        <label for=\"divineRadio\" style={{verticalAlign: \"middle\", paddingRight: \"0\"}}>\r\n                            <img src={DivineIcon} alt=\"Divine Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"650px\"}}> \r\n                    <div>\r\n                        <select id=\"typeSelect\" className=\"cardInfoSelect\" required>\r\n                            <option value=\"\" disabled selected>Select Type</option>\r\n                            {typeOptions.map((type) => {\r\n                                return <option value={type}>{type}</option>\r\n                            })}\r\n                        </select>\r\n                        <select id=\"abilitySelect\" className=\"cardInfoSelect\">\r\n                            <option value=\"\" disabled selected>Select Ability</option>\r\n                            {abilityOptions.map((ability) => {\r\n                                return <option value={ability}>{ability}</option>\r\n                            })}\r\n                        </select>\r\n                        <select id=\"classSelect\" className=\"cardInfoSelect\" style={{marginRight: \"0\"}}>\r\n                            <option value=\"\" disabled selected>Select Class</option>\r\n                            {classOptions.map((classification) => {\r\n                                return <option value={classification}>{classification}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"600px\"}}>\r\n                    <div>\r\n                        <textarea id=\"descriptionText\" placeholder=\"Enter card description.\"/>\r\n                        <label for=\"descriptionText\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"325px\"}}>\r\n                    <span style={{fontSize: \"20px\", color: \"white\"}}>\r\n                        <label for=\"atkInput\">ATK: </label>\r\n                        <input id=\"atkInput\" className=\"basicInput atkDefInput\" maxLength=\"4\" minLength=\"1\"/>\r\n                        <label for=\"defInput\">DEF: </label>\r\n                        <input id=\"defInput\" className=\"basicInput atkDefInput\" maxLength=\"4\" minLength=\"1\"/>\r\n                    </span>\r\n                </div>\r\n                <div style={{margin: \"50px auto\", borderBottom: \"2px solid white\", width: \"70%\"}}/>\r\n                <div className=\"formElement\" style={{width: \"450px\"}}>\r\n                    <div style={{color: \"white\", fontFamily: \"EBGaramond, serif\"}}>\r\n                        <div style={{fontSize: \"26px\", textAlign: \"center\"}}>Card Metrics</div>\r\n                        <p style={{width: \"450px\", fontSize: \"18px\", textAlign: \"center\"}}>{decksInstructions}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{display: \"flex\", width: \"485px\"}}>\r\n                    <select id=\"deckSelect\" className=\"cardInfoSelect\">\r\n                        <option value=\"\" disabled selected>Select Deck</option>\r\n                        {decks.map((deck) => {\r\n                            return <option value={deck}>{deck}</option>\r\n                        })}\r\n                    </select>\r\n                    <input id=\"deckInput\" className=\"basicInput\" style={{width: \"250px\", float: \"right\"}} maxLength=\"20\" placeholder=\"Enter deck name\"/>\r\n                    <label for=\"deckInput\"/>\r\n                </div>\r\n                <div style={{width: \"375px\", margin: \"10px  auto\"}}>\r\n                    <span>\r\n                        <input type=\"radio\" id=\"mainDeckRadio\" name=\"deckRadioGroup\" value=\"Main Deck\" onChange={this.setDeckType}/>\r\n                        <label for=\"mainDeckRadio\" style={{color: \"white\", fontFamily: \"EBGaramond, serif\", fontSize: \"18px\", marginRight: \"10px\"}}>Main Deck</label>\r\n                        <input type=\"radio\" id=\"extraDeckRadio\" name=\"deckRadioGroup\" value=\"Extra Deck\" onChange={this.setDeckType}/>\r\n                        <label for=\"extraDeckRadio\" style={{color: \"white\", fontFamily: \"EBGaramond, serif\", fontSize: \"18px\", marginRight: \"10px\"}}>Extra Deck</label>\r\n                        <input type=\"radio\" id=\"sideDeckRadio\" name=\"deckRadioGroup\" value=\"Side Deck\" onChange={this.setDeckType}/>\r\n                        <label for=\"sideDeckRadio\" style={{color: \"white\", fontFamily: \"EBGaramond, serif\", fontSize: \"18px\"}}>Side Deck</label>\r\n                    </span>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"190px\"}}>\r\n                    <div style={{fontSize: \"20px\", color: \"white\"}}>\r\n                        <label for=\"countInput\">Count: </label>\r\n                        <input id=\"countInput\" className=\"basicInput\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"450px\", color: \"white\", fontFamily: \"EBGaramond, serif\"}}>\r\n                    <p style={{fontSize: \"18px\", textAlign: \"center\"}}>{tagInstructions}</p>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"485px\"}}>\r\n                <span>\r\n                    <select id=\"tagSelect\" className=\"cardInfoSelect\" style={{height: \"250px\", maxWidth: \"200px\"}} multiple>\r\n                        {tags.map((tag) => {\r\n                            return <option value={tag}>{tag}</option>\r\n                        })}\r\n                    </select>\r\n                    <input id=\"tagInput\" className=\"basicInput\" style={{width: \"250px\", verticalAlign: \"top\"}} maxLength=\"70\" placeholder=\"Enter tag(s)\"/>\r\n                    <label for=\"tagInput\"/>\r\n                </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","export const SpellType = Object.freeze({\r\n    CONTINUOUS: \"Continuous\",\r\n    EQUIP: \"Equip\",\r\n    FIELD: \"Field\",\r\n    NORMAL: \"Normal\",\r\n    QUICK: \"Quick\",\r\n    RITUAL: \"Ritual\"\r\n});","import React, { Component } from 'react';\r\nimport \"../../styles/commonThemes.css\";\r\nimport \"../../styles/add.css\";\r\nimport { SpellType } from \"../../enums/SpellType\";\r\n\r\nexport default class NonMonsterForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cardType: props.cardType,\r\n            decks: [],\r\n            tags: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDecks();\r\n        this.getTags();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.cardType !== this.state.cardType) {\r\n            this.setState({\r\n                cardType: this.props.cardType\r\n            });\r\n        }\r\n    }\r\n\r\n    async getDecks() {\r\n        let endpoint = `${window.location.origin}/inventory/decks`;\r\n        let request = await fetch(endpoint);\r\n        let response = await request.json();\r\n\r\n        this.setState({\r\n            decks: response\r\n        });\r\n\r\n    }\r\n\r\n    async getTags() {\r\n        let endpoint = `${window.location.origin}/inventory/tags`;\r\n        let request = await fetch(endpoint);\r\n        let response = await request.json();\r\n\r\n        this.setState({\r\n            tags: response\r\n        });\r\n    }\r\n\r\n    filterForSelected(groupName) {\r\n        let selected = null;\r\n        let elements = document.getElementsByName(groupName);\r\n        if(elements !== null) {\r\n            let i = 0;\r\n            while (i < elements.length && selected === null) {\r\n                if (elements[i].checked) {selected = elements[i].value;}\r\n                i++;\r\n            }\r\n        }\r\n\r\n        return selected;\r\n    }\r\n\r\n    setDeckType = (e) => {\r\n        if (document.getElementsByClassName(\"deckTypeSelected\")[0]) {\r\n            document.getElementsByClassName(\"deckTypeSelected\")[0].className = \"\";\r\n        }\r\n        document.getElementById(e.target.id).className = \"deckTypeSelected\";\r\n    }\r\n\r\n    render() {\r\n        const { cardType, decks, tags } = this.state;\r\n\r\n        let typeOptions = cardType === \"Spell\" ? Object.values(SpellType) : [\"Normal\", \"Continuous\", \"Counter\"];\r\n        let decksInstructions = \"If this card belongs to a deck already in the database, please select that deck from the dropdown. Otherwise, you may enter it in the accompanying text box.\\nSelect the type of deck this card belongs to by checking one of the boxes. If left unchecked, this card will be labelled as part of a Main Deck.\";\r\n        let tagInstructions = \"You can select one or more options from the list (Ctrl+Click to select multiple tags). If the tag(s) you wish to use is not in the list, use the accompanying text box to include it with this card (separate multiple tags with \\\"/\\\")\";\r\n\r\n        //ELEPHANT: Add info i for each field\r\n        //ELEPHANT: Check tag input content (only alpha-num char) against selections from tag list. select element has priority\r\n\r\n        return (\r\n            <div className=\"contentWrapper\">\r\n                <div className=\"formElement\" style={{width: \"495px\"}}>\r\n                    <div>\r\n                        <input type=\"text\" placeholder=\"Card Number\" id=\"cardNoInput\" className=\"basicInput\" maxLength=\"10\" autoComplete=\"off\" style={{marginRight: \"25px\"}}></input>\r\n                        <input type=\"text\" placeholder=\"Card Name\" id=\"cardNameInput\" className=\"basicInput\" maxLength=\"50\" autoComplete=\"off\" style={{width: \"350px\"}}></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"650px\"}}> \r\n                    <div style={{margin: \"0 auto\", width: \"200px\"}}>\r\n                        <select id=\"typeSelect\" className=\"cardInfoSelect\" required>\r\n                            <option value=\"\" disabled selected>Select Type</option>\r\n                            {typeOptions.map((type) => {\r\n                                return <option value={type}>{type}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"600px\"}}>\r\n                    <div>\r\n                        <textarea id=\"descriptionText\" placeholder=\"Enter card description.\"/>\r\n                        <label for=\"descriptionText\"/>\r\n                    </div>\r\n                </div>\r\n                <div style={{margin: \"50px auto\", borderBottom: \"2px solid white\", width: \"70%\"}}/>\r\n                <div className=\"formElement\" style={{width: \"450px\"}}>\r\n                    <div style={{color: \"white\", fontFamily: \"EBGaramond, serif\"}}>\r\n                        <div style={{fontSize: \"26px\", textAlign: \"center\"}}>Card Metrics</div>\r\n                        <p style={{width: \"450px\", fontSize: \"18px\", textAlign: \"center\"}}>{decksInstructions}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{display: \"flex\", width: \"485px\"}}>\r\n                    <select id=\"deckSelect\" className=\"cardInfoSelect\">\r\n                        <option value=\"\" disabled selected>Select Deck</option>\r\n                        {decks.map((deck) => {\r\n                            return <option value={deck}>{deck}</option>\r\n                        })}\r\n                    </select>\r\n                    <input id=\"deckInput\" className=\"basicInput\" style={{width: \"250px\", float: \"right\"}} maxLength=\"20\" placeholder=\"Enter deck name\"/>\r\n                    <label for=\"deckInput\"/>\r\n                </div>\r\n                <div style={{width: \"375px\", margin: \"10px  auto\"}}>\r\n                    <span>\r\n                        <input type=\"radio\" id=\"mainDeckRadio\" name=\"deckRadioGroup\" value=\"Main Deck\" onChange={this.setDeckType}/>\r\n                        <label for=\"mainDeckRadio\" style={{color: \"white\", fontFamily: \"EBGaramond, serif\", fontSize: \"18px\", marginRight: \"10px\"}}>Main Deck</label>\r\n                        <input type=\"radio\" id=\"extraDeckRadio\" name=\"deckRadioGroup\" value=\"Extra Deck\" onChange={this.setDeckType}/>\r\n                        <label for=\"extraDeckRadio\" style={{color: \"white\", fontFamily: \"EBGaramond, serif\", fontSize: \"18px\", marginRight: \"10px\"}}>Extra Deck</label>\r\n                        <input type=\"radio\" id=\"sideDeckRadio\" name=\"deckRadioGroup\" value=\"Side Deck\" onChange={this.setDeckType}/>\r\n                        <label for=\"sideDeckRadio\" style={{color: \"white\", fontFamily: \"EBGaramond, serif\", fontSize: \"18px\"}}>Side Deck</label>\r\n                    </span>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"190px\"}}>\r\n                    <div style={{fontSize: \"20px\", color: \"white\"}}>\r\n                        <label for=\"countInput\">Count: </label>\r\n                        <input id=\"countInput\" className=\"basicInput\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"450px\", color: \"white\", fontFamily: \"EBGaramond, serif\"}}>\r\n                    <p style={{fontSize: \"18px\", textAlign: \"center\"}}>{tagInstructions}</p>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"485px\"}}>\r\n                <span>\r\n                    <select id=\"tagSelect\" className=\"cardInfoSelect\" style={{height: \"250px\", maxWidth: \"200px\"}} multiple>\r\n                        {tags.map((tag) => {\r\n                            return <option value={tag}>{tag}</option>\r\n                        })}\r\n                    </select>\r\n                    <input id=\"tagInput\" className=\"basicInput\" style={{width: \"250px\", verticalAlign: \"top\"}} maxLength=\"70\" placeholder=\"Enter tag(s)\"/>\r\n                    <label for=\"tagInput\"/>\r\n                </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/rank_icon.1fbb9995.png\";","export default __webpack_public_path__ + \"static/media/add_icon.c17498a2.png\";","export default __webpack_public_path__ + \"static/media/delete_icon.55c559a3.png\";","import React, { Component } from 'react';\r\nimport \"../../styles/commonThemes.css\";\r\nimport \"../../styles/add.css\";\r\nimport { MonsterType } from \"../../enums/MonsterType\";\r\nimport { Ability } from \"../../enums/Ability\"; //auto-set to the chosen MaterialMonster and disabled\r\nimport { Classification } from \"../../enums/Classification\";\r\nimport LevelIcon from '../../assets/images/level_icon.png';\r\nimport RankIcon from '../../assets/images/rank_icon.png';\r\nimport FireIcon from '../../assets/images/attr_fire_icon.png';\r\nimport WindIcon from '../../assets/images/attr_wind_icon.png';\r\nimport LightIcon from '../../assets/images/attr_light_icon.png';\r\nimport DivineIcon from '../../assets/images/attr_divine_icon.png';\r\nimport WaterIcon from '../../assets/images/attr_water_icon.png';\r\nimport EarthIcon from '../../assets/images/attr_earth_icon.png';\r\nimport DarkIcon from '../../assets/images/attr_dark_icon.png';\r\nimport AddIcon from '../../assets/images/add_icon.png';\r\nimport DeleteIcon from '../../assets/images/delete_icon.png';\r\n\r\nexport default class MaterialMonsterForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cardType: props.cardType,\r\n            materials: [],\r\n            links: [],\r\n            decks: [],\r\n            tags: [],\r\n        };\r\n\r\n        this.addMaterial = this.addMaterial.bind(this);\r\n        this.deleteMaterial = this.deleteMaterial.bind(this);\r\n        this.setSelected = this.setSelected.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDecks();\r\n        this.getTags();\r\n        this.setState({\r\n            cardType: this.props.cardType\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.cardType !== this.state.cardType) {\r\n            this.setState({\r\n                cardType: this.props.cardType\r\n            });\r\n\r\n            document.getElementById(\"abilitySelect\").value = this.props.cardType;\r\n        }\r\n    }\r\n\r\n    async getDecks() {\r\n        let endpoint = `${window.location.origin}/inventory/decks`;\r\n        let request = await fetch(endpoint);\r\n        let response = await request.json();\r\n\r\n        this.setState({\r\n            decks: response\r\n        });\r\n\r\n    }\r\n\r\n    async getTags() {\r\n        let endpoint = `${window.location.origin}/inventory/tags`;\r\n        let request = await fetch(endpoint);\r\n        let response = await request.json();\r\n\r\n        this.setState({\r\n            tags: response\r\n        });\r\n    }\r\n\r\n    setSelected = (e) => {\r\n        if (document.getElementsByClassName(\"attrSelected\")[0]) {\r\n            document.getElementsByClassName(\"attrSelected\")[0].className = \"\";\r\n        }\r\n        document.getElementById(e.target.id).className = \"attrSelected\";\r\n    }\r\n\r\n    addMaterial = (e) => {\r\n        const { materials } = this.state;\r\n\r\n        let newMaterial = document.getElementById(\"newMaterialInput\").value;\r\n        let temp = materials;\r\n        if (newMaterial !== \"\") {temp.push(newMaterial)};\r\n\r\n        document.getElementById(\"newMaterialInput\").value = \"\";\r\n        this.setState({\r\n            materials: temp\r\n        });\r\n    }\r\n\r\n    deleteMaterial = (e) => {\r\n        const { materials } = this.state;\r\n        let selected = e.target.id;\r\n\r\n        let selectedText = document.getElementById(\"materialText_\" + selected.substring(selected.indexOf('_') + 1)).textContent;\r\n        console.log(selectedText);\r\n\r\n        let result = [];\r\n        for(let i=0; i < materials.length; i++) {\r\n            if (materials[i] !== selectedText) {result.push(materials[i])};\r\n        }\r\n\r\n        this.setState({\r\n            materials: result\r\n        });\r\n    }\r\n\r\n    setDeckType = (e) => {\r\n        if (document.getElementsByClassName(\"deckTypeSelected\")[0]) {\r\n            document.getElementsByClassName(\"deckTypeSelected\")[0].className = \"\";\r\n        }\r\n        document.getElementById(e.target.id).className = \"deckTypeSelected\";\r\n    }\r\n\r\n    render() {\r\n        const { cardType, materials, decks, tags } = this.state;\r\n\r\n        let typeOptions = Object.values(MonsterType);\r\n        let abilityOptions = Object.values(Ability);\r\n        let classOptions = Object.values(Classification);\r\n        let levelOptions = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ,11, 12];\r\n        let decksInstructions = \"If this card belongs to a deck already in the database, please select that deck from the dropdown. Otherwise, you may enter it in the accompanying text box.\";\r\n        let tagInstructions = \"You can select one or more options from the list (Ctrl+Click to select multiple tags). If the tag(s) you wish to use is not in the list, use the accompanying text box to include it with this card (separate multiple tags with \\\"/\\\")\";\r\n        let materialInstructions = \"Add a Material by entering the material in the box and clicking the green Add button. You can remove an added material by clicking the red delete button next to that material.\";\r\n\r\n        let linkSection = (cardType === \"Link\") ? <div>Link Section</div> : null; //remember to disable DEF input\r\n        console.log(\"cardType: \" + cardType);\r\n        let abilitySelection = cardType;\r\n        //ELEPHANT: Add info i for each field\r\n        //ELEPHANT: Fix text wrapping when material name overflows width\r\n\r\n        return (\r\n            <div className=\"contentWrapper\">\r\n                <div className=\"formElement\" style={{width: \"495px\"}}>\r\n                    <div>\r\n                        <input type=\"text\" placeholder=\"Card Number\" id=\"cardNoInput\" className=\"basicInput\" maxLength=\"10\" autoComplete=\"off\" style={{marginRight: \"25px\"}}></input>\r\n                        <input type=\"text\" placeholder=\"Card Name\" id=\"cardNameInput\" className=\"basicInput\" maxLength=\"50\" autoComplete=\"off\" style={{width: \"350px\"}}></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"210px\"}}>\r\n                    <label for=\"levelSelect\" style={{verticalAlign: \"middle\"}}>\r\n                        <img src={cardType === \"Xyz\"? RankIcon : LevelIcon} alt=\"Monster Level Icon\" height=\"40px\" width=\"40px\"/>\r\n                    </label>\r\n                    <select id=\"levelSelect\" className=\"cardInfoSelect\" style={{width: \"125px\", verticalAlign: \"middle\"}}>\r\n                        <option value=\"\" disabled selected>{cardType === \"Xyz\" ? \"Select Rank\" : \"Select Level\"}</option>\r\n                        {levelOptions.map((level) => {\r\n                            return <option value={level}>{level}</option>\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"520px\"}}>\r\n                    <div>\r\n                        <input type=\"radio\" id=\"fireRadio\" name=\"attrRadioGroup\" value=\"fire\" style={{fontSize: \"25px\"}} onChange={this.setSelected}/>\r\n                        <label for=\"fireRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={FireIcon} alt=\"Fire Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"windRadio\" name=\"attrRadioGroup\" value=\"wind\" onChange={this.setSelected}/>\r\n                        <label for=\"windRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={WindIcon} alt=\"Wind Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"waterRadio\" name=\"attrRadioGroup\" value=\"water\" onChange={this.setSelected}/>\r\n                        <label for=\"waterRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={WaterIcon} alt=\"Water Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"earthRadio\" name=\"attrRadioGroup\" value=\"earth\" onChange={this.setSelected}/>\r\n                        <label for=\"earthRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={EarthIcon} alt=\"Earth Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"lightRadio\" name=\"attrRadioGroup\" value=\"light\" onChange={this.setSelected}/>\r\n                        <label for=\"lightRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={LightIcon} alt=\"Light Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"darkRadio\" name=\"attrRadioGroup\" value=\"dark\" onChange={this.setSelected}/>\r\n                        <label for=\"darkRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={DarkIcon} alt=\"Dark Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"divineRadio\" name=\"attrRadioGroup\" value=\"divine\" onChange={this.setSelected}/>\r\n                        <label for=\"divineRadio\" style={{verticalAlign: \"middle\", paddingRight: \"0\"}}>\r\n                            <img src={DivineIcon} alt=\"Divine Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"650px\"}}> \r\n                    <div>\r\n                        <select id=\"typeSelect\" className=\"cardInfoSelect\" required>\r\n                            <option value=\"\" disabled selected>Select Type</option>\r\n                            {typeOptions.map((type) => {\r\n                                return <option value={type}>{type}</option>\r\n                            })}\r\n                        </select>\r\n                        <select id=\"abilitySelect\" className=\"cardInfoSelect\" defaultValue={abilitySelection} disabled>\r\n                            <option value=\"\" disabled selected>Select Ability</option>\r\n                            {abilityOptions.map((ability) => {\r\n                                return <option value={ability}>{ability}</option>\r\n                            })}\r\n                        </select>\r\n                        <select id=\"classSelect\" className=\"cardInfoSelect\" style={{marginRight: \"0\"}}>\r\n                            <option value=\"\" disabled selected>Select Class</option>\r\n                            {classOptions.map((classification) => {\r\n                                return <option value={classification}>{classification}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"600px\"}}>\r\n                    <p style={{width: \"450px\", margin: \"10px auto\", color: \"white\", fontFamily: \"EBGaramond, serif\", fontSize: \"18px\", textAlign: \"center\"}}>{materialInstructions}</p>\r\n                    <div style={{width: \"450px\", margin: \"10px auto\"}}>\r\n                        <div style={{width: \"300px\", margin: \"10px auto\"}}>\r\n                            <input type=\"image\" id=\"addMaterialBtn\" src={AddIcon} height=\"25px\" width=\"25px\" onClick={this.addMaterial} style={{verticalAlign: \"middle\"}}/>\r\n                            <input type=\"text\" className=\"basicInput\" id=\"newMaterialInput\" autoComplete=\"off\" style={{width: \"250px\", verticalAlign: \"middle\", marginLeft: \"10px\"}}/>\r\n                        </div>\r\n                        <div className=\"formListWrapper\" style={{width: \"auto\", margin: \"0 auto\", textAlign: \"center\"}}>\r\n                            <div className=\"listCategoryLeft\">Added Materials: </div>\r\n                            <div id=\"materialsList\" className=\"columnRightList\">\r\n                                {materials.map((material, index) => {\r\n                                    return (\r\n                                        <span id={\"materialRow_\" + index} style={{height: \"30px\", width : \"auto\"}}>\r\n                                            <button onClick={this.deleteMaterial} style={{background: \"transparent\", border: \"none\"}}>\r\n                                                <img  id={\"deleteMaterialBtn_\" + index} src={DeleteIcon} alt=\"Delete Icon\" height=\"25px\" width=\"25px\"/>\r\n                                            </button>\r\n                                            <div id={\"materialText_\" + index} className=\"material\" style={{float: \"right\", marginRight: \"10px\", marginTop: 0, verticalAlign: \"middle\"}}>{material}</div>\r\n                                        </span>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {linkSection}\r\n                <div className=\"formElement\" style={{width: \"600px\", marginTop: \"25px\"}}>\r\n                    <div>\r\n                        <textarea id=\"descriptionText\" placeholder=\"Enter card description.\"/>\r\n                        <label for=\"descriptionText\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"325px\"}}>\r\n                    <span style={{fontSize: \"20px\", color: \"white\"}}>\r\n                        <label for=\"atkInput\">ATK: </label>\r\n                        <input id=\"atkInput\" className=\"basicInput atkDefInput\" maxLength=\"4\" minLength=\"1\"/>\r\n                        <label for=\"defInput\">DEF: </label>\r\n                        <input id=\"defInput\" className=\"basicInput atkDefInput\" maxLength=\"4\" minLength=\"1\"/>\r\n                    </span>\r\n                </div>\r\n                <div style={{margin: \"50px auto\", borderBottom: \"2px solid white\", width: \"70%\"}}/>\r\n                <div className=\"formElement\" style={{width: \"450px\"}}>\r\n                    <div style={{color: \"white\", fontFamily: \"EBGaramond, serif\"}}>\r\n                        <div style={{fontSize: \"26px\", textAlign: \"center\"}}>Card Metrics</div>\r\n                        <p style={{width: \"450px\", fontSize: \"18px\", textAlign: \"center\"}}>{decksInstructions}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{display: \"flex\", width: \"485px\"}}>\r\n                    <select id=\"deckSelect\" className=\"cardInfoSelect\">\r\n                        <option value=\"\" disabled selected>Select Deck</option>\r\n                        {decks.map((deck) => {\r\n                            return <option value={deck}>{deck}</option>\r\n                        })}\r\n                    </select>\r\n                    <input id=\"deckInput\" className=\"basicInput\" style={{float: \"right\", width: \"250px\"}} maxLength=\"20\" placeholder=\"Enter deck name\"/>\r\n                    <label for=\"deckInput\"/>\r\n                </div>\r\n                <div style={{width: \"375px\", margin: \"10px  auto\"}}>\r\n                    <span>\r\n                        <input type=\"radio\" id=\"mainDeckRadio\" name=\"deckRadioGroup\" value=\"Main Deck\" onChange={this.setDeckType}/>\r\n                        <label for=\"mainDeckRadio\" style={{color: \"white\", fontFamily: \"EBGaramond, serif\", fontSize: \"18px\", marginRight: \"10px\"}}>Main Deck</label>\r\n                        <input type=\"radio\" id=\"extraDeckRadio\" name=\"deckRadioGroup\" value=\"Extra Deck\" onChange={this.setDeckType}/>\r\n                        <label for=\"extraDeckRadio\" style={{color: \"white\", fontFamily: \"EBGaramond, serif\", fontSize: \"18px\", marginRight: \"10px\"}}>Extra Deck</label>\r\n                        <input type=\"radio\" id=\"sideDeckRadio\" name=\"deckRadioGroup\" value=\"Side Deck\" onChange={this.setDeckType}/>\r\n                        <label for=\"sideDeckRadio\" style={{color: \"white\", fontFamily: \"EBGaramond, serif\", fontSize: \"18px\"}}>Side Deck</label>\r\n                    </span>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"190px\"}}>\r\n                    <div style={{fontSize: \"20px\", color: \"white\"}}>\r\n                        <label for=\"countInput\">Count: </label>\r\n                        <input id=\"countInput\" className=\"basicInput\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"450px\", color: \"white\", fontFamily: \"EBGaramond, serif\"}}>\r\n                    <p style={{fontSize: \"18px\", textAlign: \"center\"}}>{tagInstructions}</p>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"485px\"}}>\r\n                <span>\r\n                    <select id=\"tagSelect\" className=\"cardInfoSelect\" style={{height: \"250px\", maxWidth: \"200px\"}} multiple>\r\n                        {tags.map((tag) => {\r\n                            return <option value={tag}>{tag}</option>\r\n                        })}\r\n                    </select>\r\n                    <input id=\"tagInput\" className=\"basicInput\" style={{width: \"250px\", verticalAlign: \"top\"}} maxLength=\"70\" placeholder=\"Enter tag(s)\"/>\r\n                    <label for=\"tagInput\"/>\r\n                </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport \"../styles/commonThemes.css\";\r\nimport \"../styles/add.css\";\r\nimport \"../styles/modal.css\";\r\nimport { Ability } from '../enums/Ability';\r\nimport AddModal from '../components/modal/AddModal';\r\nimport MonsterForm from '../components/forms/MonsterForm';\r\nimport NonMonsterForm from '../components/forms/NonMonsterForm';\r\nimport MaterialMonsterForm from '../components/forms/MaterialMonsterForm';\r\n\r\nexport default class Add extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cardType: \"\",\r\n            cardInfo: {},\r\n            show: false,\r\n            selectedType: \"Monster\"\r\n        }\r\n\r\n        this.filterForSelected = this.filterForSelected.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    filterForSelected = (e) => {\r\n        let selected = null;\r\n        let elements = document.getElementsByName(\"cardTypeRadioGroup\");\r\n        if(elements !== null) {\r\n            let i = 0;\r\n            while (i < elements.length && selected === null) {\r\n                if (elements[i].checked) {selected = elements[i].value;}\r\n                i++;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            selectedType: selected\r\n        });\r\n    }\r\n\r\n    getForm(selectedType) {\r\n        switch (selectedType) {\r\n            case \"Spell\":\r\n                return <NonMonsterForm cardType={\"Spell\"}/>;\r\n            case \"Trap\":\r\n                return <NonMonsterForm cardType={\"Trap\"}/>\r\n            case \"Pendulum\":\r\n                return <MaterialMonsterForm cardType={Ability.PENDULUM}/>\r\n            case \"Fusion\":\r\n                return <MaterialMonsterForm cardType={Ability.FUSION}/>\r\n            case \"Synchro\":\r\n                return <MaterialMonsterForm cardType={Ability.SYNCHRO}/>\r\n            case \"Xyz\":\r\n                return <MaterialMonsterForm cardType={Ability.XYZ}/>\r\n            case \"Link\":\r\n                return <MaterialMonsterForm cardType={Ability.LINK}/>\r\n            default:\r\n                return <MonsterForm cardType={\"Monster\"}/>\r\n        }\r\n    }\r\n\r\n    filterMultiSelected(selectId) {\r\n        let selected = [];\r\n        let elements = document.getElementById(selectId);\r\n        if(elements !== null) {\r\n            let i = 0;\r\n            while (i < elements.options.length) {\r\n                if (elements.options[i].selected) {selected.push(elements.options[i].value)}\r\n                i++;\r\n            }\r\n        }\r\n\r\n        return selected;\r\n    }\r\n\r\n    condensedTags() {\r\n        let selectTags = this.filterMultiSelected(\"tagSelect\");\r\n        let inputSelectValue = document.getElementById(\"tagInput\").value.split(\"/\");\r\n\r\n        if (selectTags === []) {\r\n            return inputSelectValue;\r\n        } else if (inputSelectValue === [] || inputSelectValue[0] === \"\") {\r\n            return selectTags;\r\n        } else {\r\n            return selectTags.concat(inputSelectValue);\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n        /*\r\n            - popup confirmation modal filled with form information\r\n            - \"Confirm\" and \"Cancel\" buttons\r\n            - grey out background\r\n            - on submit, add info to repository\r\n        */\r\n\r\n        const { selectedType } = this.state;\r\n        let cardInfo = {};\r\n\r\n        // ALL CARDS\r\n        cardInfo[\"cardType\"] = selectedType;\r\n        cardInfo[\"cardNo\"] = document.getElementById(\"cardNoInput\").value.toUpperCase();\r\n        cardInfo[\"cardName\"] = document.getElementById(\"cardNameInput\").value;\r\n        cardInfo[\"type\"] = document.getElementById(\"typeSelect\").value;\r\n        cardInfo[\"description\"] = document.getElementById(\"descriptionText\").value;\r\n        if (document.getElementById(\"deckSelect\").value === \"\" && document.getElementById(\"deckInput\") === \"\") {\r\n            cardInfo[\"deck\"] = [\"Inventory\"];\r\n        } else if (document.getElementById(\"deckSelect\").value !== \"\") {\r\n            cardInfo[\"deck\"] = [document.getElementById(\"deckSelect\").value];\r\n        } else {\r\n            cardInfo[\"deck\"] = [document.getElementById(\"deckInput\").value];\r\n        }\r\n\r\n        let deckType = document.getElementsByClassName(\"deckTypeSelected\")[0].value;\r\n        if (deckType === \"Extra Deck\") {\r\n            cardInfo[\"extraDeck\"] = true;\r\n            cardInfo[\"sideDeck\"] = false;\r\n        } else if (deckType === \"Side Deck\") {\r\n            cardInfo[\"extraDeck\"] = false;\r\n            cardInfo[\"sideDeck\"] = true;\r\n        } else {\r\n            cardInfo[\"extraDeck\"] = false;\r\n            cardInfo[\"sideDeck\"] = false;\r\n        }\r\n        cardInfo[\"count\"] = document.getElementById(\"countInput\").value;\r\n        cardInfo[\"tag\"] = this.condensedTags();\r\n\r\n        if (selectedType !== \"Spell\" && selectedType !== \"Trap\") {\r\n            cardInfo[\"level\"] = document.getElementById(\"levelSelect\").value;\r\n            cardInfo[\"attribute\"] = document.getElementsByClassName(\"attrSelected\")[0].value;\r\n            cardInfo[\"ability\"] = document.getElementById(\"abilitySelect\").value === \"None\" ? null : document.getElementById(\"abilitySelect\").value;\r\n            cardInfo[\"class\"] = document.getElementById(\"classSelect\").value;\r\n            cardInfo[\"atk\"] = document.getElementById(\"atkInput\").value;\r\n            cardInfo[\"def\"] = selectedType !== \"Link\" ? document.getElementById(\"defInput\").value : null;\r\n        }\r\n\r\n        if (selectedType === \"Fusion\" || selectedType === \"Xyz\" || selectedType === \"Synchro\") {\r\n            let materialElements = document.getElementsByClassName(\"material\");\r\n            let materials = [];\r\n            for (let i=0; i < materialElements.length; i++) {\r\n                materials.push(materialElements[i].innerText);\r\n            }\r\n            cardInfo[\"materials\"] = materials;\r\n        } else if (selectedType === \"Link\") {\r\n            let materialElements = document.getElementsByClassName(\"material\");\r\n            let materials = [];\r\n            for (let i=0; i < materialElements.length; i++) {\r\n                materials.push(materialElements[i].innerText);\r\n            }\r\n            cardInfo[\"materials\"] = materials;\r\n            //ELEPHANT: get link zones\r\n        } else if (selectedType === \"Pendulum\") {\r\n            //ELEPHANT: get pendulum effect\r\n            //ELEPHANT: get left and right bounds\r\n        }\r\n\r\n        console.log(\"cardInfo\");\r\n        console.log(cardInfo);\r\n        \r\n        this.setState({\r\n            cardInfo: cardInfo,\r\n            show: true\r\n        });\r\n    }\r\n\r\n    onCancel = () => {\r\n        this.setState({\r\n            show: false\r\n        });\r\n    }\r\n\r\n    onConfirm = (e) => {\r\n        console.log(\"update repository\");\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { cardType, cardInfo, show, selectedType } = this.state;\r\n\r\n        let description = \"Cards are stored based on the card number. This number is uneditable, so make sure you've entered it correctly. All other information can be edited at a later time.\";\r\n        \r\n        //ELEPHANT: Add info i for each field\r\n        //ELEPHANT: Upon submit, make sure ATK/DEF matches a regular expression for {only numbers || \"?\"}\r\n        //ELEPHANT: Check tag input content (only alpha-num char) against selections from tag list. select element has priority\r\n        //TODO: HOW THE FORK DID I FORGET ABOUT RITUAL MONSTERS?!?!?!?!?\r\n        //TODO: AND TOKENS!!! --CRIES--\r\n\r\n        let formView = this.getForm(selectedType);\r\n\r\n        return(\r\n                <div className=\"contentWrapper\">\r\n                    <div>\r\n                        <div id=\"header\" style={{textAlign: \"center\"}}>Add Card</div>\r\n                        <div id=\"description\" style={{width: \"500px\", margin: \"0 auto\"}}>\r\n                            <ol id=\"instructions\">\r\n                                <li>Select a card type</li>\r\n                                <li>Fill in the card information. (All information is required)</li>\r\n                                <li>Click \"Add\" to add card to your inventory</li>\r\n                            </ol>\r\n                            <div style={{width: \"500px\", textAlign: \"center\"}}>{description}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"formElement\" style={{width: \"800px\"}}>\r\n                        <span id=\"cardTypeSelection\" className=\"radioGroup\">\r\n                            <input type=\"radio\" id=\"monsterRadio\" name=\"cardTypeRadioGroup\" value=\"Monster\" defaultChecked={true} onChange={this.filterForSelected}/>\r\n                            <label for=\"monsterRadio\">Monster</label>\r\n                            <input type=\"radio\" id=\"spellRadio\" name=\"cardTypeRadioGroup\" value=\"Spell\" onChange={this.filterForSelected}/>\r\n                            <label for=\"spellRadio\">Spell</label>\r\n                            <input type=\"radio\" id=\"trapRadio\" name=\"cardTypeRadioGroup\" value=\"Trap\" onChange={this.filterForSelected}/>\r\n                            <label for=\"trapRadio\">Trap</label>\r\n                            <input type=\"radio\" id=\"pendulumRadio\" name=\"cardTypeRadioGroup\" value=\"Pendulum\" onChange={this.filterForSelected} disabled/>\r\n                            <label for=\"pendulumRadio\">Pendulum</label>\r\n                            <input type=\"radio\" id=\"fusionRadio\" name=\"cardTypeRadioGroup\" value=\"Fusion\" onChange={this.filterForSelected}/>\r\n                            <label for=\"fusionRadio\">Fusion</label>\r\n                            <input type=\"radio\" id=\"xyzRadio\" name=\"cardTypeRadioGroup\" value=\"Xyz\" onChange={this.filterForSelected}/>\r\n                            <label for=\"xyzRadio\">Xyz</label>\r\n                            <input type=\"radio\" id=\"synchroRadio\" name=\"cardTypeRadioGroup\" value=\"Synchro\" onChange={this.filterForSelected}/>\r\n                            <label for=\"synchroRadio\">Synchro</label>\r\n                            <input type=\"radio\" id=\"linkRadio\" name=\"cardTypeRadioGroup\" value=\"Link\" onChange={this.filterForSelected} disabled/>\r\n                            <label for=\"linkRadio\">Link</label>\r\n                        </span>\r\n                    </div>\r\n                    {formView}\r\n                    <div className=\"formElement\" style={{width: \"190px\", marginTop: \"50px\"}}>\r\n                        <button className=\"formBtn okBtn\" onClick={this.onSubmit}>Submit</button>\r\n                        <button className=\"formBtn ccBtn\" onClick={this.onCancel}>Clear</button>\r\n                        <AddModal cardInfo={cardInfo} show={show} onCancel={this.onCancel} onConfirm={this.onConfirm}/>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/millenium_eye_trnp_1.1d937b88.png\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MilleniumEye from '../assets/images/millenium_eye_trnp_1.png';\r\nimport '../styles/home.css';\r\nimport '../styles/commonThemes.css';\r\n\r\nexport default class Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selected: 'None'\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        /* ELEPHANT: Come back and vertically align li text */\r\n        return(\r\n            <div className=\"contentWrapper\">\r\n                <div style={{width: \"350px\", margin: \"150px auto\"}}>\r\n                        <Link className=\"menuLink\" to=\"/add\">\r\n                            <div style={{display: \"flex\"}}>\r\n                                <img src={MilleniumEye} alt=\"Add Card\" height=\"40px\" width=\"75px\" style={{margin: \"auto 10px\"}}/>\r\n                                <div className=\"menuOptionText\">Add Card</div>\r\n                            </div>\r\n                        </Link>\r\n                        <Link className=\"menuLink\" to=\"/inventory\">\r\n                            <div style={{display: \"flex\"}}>\r\n                                <img src={MilleniumEye} alt=\"Inventory\" height=\"40px\" width=\"75px\" style={{margin: \"auto 10px\"}}/>\r\n                                <div className=\"menuOptionText\">Inventory</div>\r\n                            </div>\r\n                        </Link>\r\n                        <Link className=\"menuLink\" to=\"/decks\">\r\n                            <div style={{display: \"flex\"}}>\r\n                                <img src={MilleniumEye} alt=\"Decks\" height=\"40px\" width=\"75px\" style={{margin: \"auto 10px\"}}/>\r\n                                <div className=\"menuOptionText\">Decks</div>\r\n                            </div>\r\n                        </Link>\r\n                        {/* <Link className=\"menuLink\" to=\"/edit_menu\">\r\n                            <div style={{display: \"flex\"}}>\r\n                                <img src={MilleniumEye} alt=\"Edit Card\" height=\"40px\" width=\"75px\" style={{margin: \"auto 10px\"}}/>\r\n                                <div className=\"menuOptionText\">Edit Card</div>\r\n                            </div>\r\n                        </Link> */}\r\n                </div>\r\n                 {/* <ul id='menuOptions' className=\"menuOptions\">\r\n                     <li>\r\n                        <Link className=\"menuLink\" to=\"/add\">\r\n                                <img src={MilleniumEye} alt=\"Add Card\" height=\"40px\" width=\"75px\"/>\r\n                                Add Card\r\n                        </Link>\r\n                     </li>\r\n                     <li>\r\n                        <Link className=\"menuLink\" to=\"/inventory\">\r\n                            <img src={MilleniumEye} alt=\"Inventory\" height=\"40px\" width=\"75px\"/>\r\n                            Inventory\r\n                        </Link>\r\n                     </li>\r\n                     <li>Second Card</li>\r\n                     <li>Third Card</li>\r\n                     <li>Fourth Card</li>\r\n                 </ul>\r\n                 */}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Menu from '../components/Menu';\r\n\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Menu/>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Switch, Route } from \"react-router-dom\";\r\nimport Decks from './pages/decks';\r\nimport EditCard from './pages/edit_card';\r\nimport EditMenu from './pages/edit_menu';\r\nimport Inventory from './pages/inventory';\r\nimport Add from './pages/add';\r\nimport Home from './pages/home';\r\n\r\nconst Main = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path={'/decks'} component={Decks}/>\r\n            <Route path={'/edit_menu'} component={EditMenu}/>\r\n            <Route path={'/edit'} component={EditCard}/>\r\n            {/* <Route path={'/decks'} component={Decks}/> */}\r\n            <Route path={'/inventory'} component={Inventory}/>\r\n            <Route path={'/add'} component={Add}/>\r\n            <Route path={'/'} component={Home}/>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Main from './routes';\r\n\r\nexport default function App() {\r\n    return(\r\n        <Router>\r\n            <Main/>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\n// import reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport routes from './routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter routes={routes}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/inventory/StockList.js","components/inventory/DetailsPanel.js","pages/inventory.js","enums/Ability.js","enums/MonsterType.js","enums/Classification.js","assets/images/level_icon.png","assets/images/attr_fire_icon.png","assets/images/attr_wind_icon.png","assets/images/attr_light_icon.png","assets/images/attr_divine_icon.png","components/forms/MonsterForm.js","components/forms/NonMonsterForm.js","assets/images/add_icon.png","assets/images/delete_icon.png","components/forms/MaterialMonsterForm.js","pages/add.js","assets/images/millenium_eye_trnp_1.png","components/Menu.js","pages/home.js","routes.js","App.js","index.js"],"names":["StockList","props","onClick","e","document","getElementsByClassName","style","left","getElementById","visibility","cardName","target","innerText","includes","substring","indexOf","onSelectedCard","state","cardList","this","setState","list","Object","values","map","item","count","i","length","id","className","cardType","toLowerCase","displayList","formatListEntries","Component","DetailsPane","cardInfo","attr","level","desc","atk","def","cardNo","formattedCardNo","types","formattedTypes","decks","formattedDecks","tags","formattedTags","undefined","fontSize","marginTop","Inventory","classList","remove","add","updateCardList","handleSelectionChange","selectedCard","currentView","masterList","condensedList","selectedType","getCardList","a","endpoint","window","location","origin","fetch","request","json","response","condenseCardList","filterParam","filteredList","filter","sort","b","push","array","deckList","result","concat","join","chosenOne","attribute","description","reduce","accumulator","val","combineCardNo","combineAttributeValues","type","position","width","marginLeft","Ability","freeze","FLIP","GEMINI","SPIRIT","TOON","UNION","FUSION","XYZ","SYNCHRO","PENDULUM","LINK","MonsterType","AQUA","BEAST","BEAST_WARRIOR","CREATOR_GOD","CYBERSE","DINOSAUR","DIVINE_BEAST","DRAGON","FAIRY","FIEND","FISH","INSECT","MACHINE","PLANT","PSYCHIC","PYRO","REPTILE","ROCK","SEA_SERPENT","SPELLCASTER","THUNDER","WARRIOR","WINGED_BEAST","WYRM","ZOMBIE","Classification","EFFECT","NORMAL","SPECIAL_SUMMON","TUNER","MonsterForm","getDecks","getTags","groupName","selected","elements","getElementsByName","checked","value","typeOptions","abilityOptions","classOptions","placeholder","maxLength","marginRight","for","verticalAlign","src","LevelIcon","alt","height","disabled","name","FireIcon","WindIcon","LightIcon","paddingRight","DivineIcon","required","ability","classification","color","minLength","margin","borderBottom","fontFamily","textAlign","deck","maxWidth","multiple","tag","NonMonsterForm","MaterialMonsterForm","addMaterial","materials","newMaterial","temp","deleteMaterial","selectedText","textContent","console","log","links","bind","linkSection","abilitySelection","defaultValue","AddIcon","autoComplete","material","index","background","border","DeleteIcon","float","Add","onSubmit","class","show","filterForSelected","formView","getForm","defaultChecked","onChange","Menu","to","MilleniumEye","Home","Main","path","component","App","ReactDOM","render","StrictMode","routes"],"mappings":"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","file":"static/js/main.b628eb32.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport '../../styles/inventory.css';\r\n\r\nexport default class StockList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            cardList: props.cardList,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            cardList: this.props.cardList\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.state.cardList !== this.props.cardList) {\r\n            this.setState({\r\n                cardList: this.props.cardList\r\n            });\r\n        }\r\n    }\r\n\r\n    formatListEntries(list) {\r\n        let values = Object.values(list);\r\n\r\n        return (values.map((item) => {\r\n            let count = item[0].count;\r\n            for(let i=1; i < item.length; i++) {\r\n                count += item[i].count;\r\n            }\r\n            return (\r\n                <li \r\n                    id=\"inventoryItem\" \r\n                    className={item[0].cardType.toLowerCase() + \"Item\"} \r\n                    onClick={this.onClick}>\r\n                        {item[0].cardName + (item.length > 1 ? (\" (\" + count + \")\") : \"\")}\r\n                </li>)\r\n        }));\r\n    }\r\n\r\n    onClick = (e) => {\r\n        document.getElementsByClassName(\"inventoryList\")[0].style.left = \"25%\";\r\n        document.getElementById(\"detailsPanel\").style.visibility = \"visible\";\r\n        let cardName = e.target.innerText.includes(' (') ? e.target.innerText.substring(0, e.target.innerText.indexOf(' (')) : e.target.innerText;\r\n        this.props.onSelectedCard(cardName);\r\n    }\r\n\r\n    render() {\r\n        const { cardList } = this.state;\r\n\r\n        let displayList = this.formatListEntries(cardList);\r\n        return (\r\n            <div>\r\n                <ul className='inventoryList'>\r\n                    {displayList}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n }","import { Component } from 'react';\r\nimport '../../styles/inventoryDetails.css';\r\n\r\nexport default class DetailsPane extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cardInfo: props.cardInfo,\r\n            cardName: props.cardName,\r\n            attr: props.attr,\r\n            level: props.level,\r\n            desc: props.desc,\r\n            atk: props.atk,\r\n            def: props.def,\r\n            cardNo: props.formattedCardNo,\r\n            types: props.formattedTypes,\r\n            decks: props.formattedDecks,\r\n            tags: props.formattedTags,\r\n            count: props.count\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.cardInfo === undefined) {\r\n            this.setState({\r\n                cardInfo: []\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.cardInfo !== this.props.cardInfo) {\r\n            this.setState({\r\n                cardInfo: this.props.cardInfo\r\n            });\r\n        }\r\n\r\n        if (this.state.cardName !== this.props.cardName) {\r\n            this.setState({\r\n                cardName: this.props.cardName,\r\n                attr: this.props.attr,\r\n                level: this.props.level,\r\n                desc: this.props.desc,\r\n                atk: this.props.atk,\r\n                def: this.props.def,\r\n                types: this.props.formattedTypes,\r\n                cardNo: this.props.formattedCardNo,\r\n                decks: this.props.formattedDecks,\r\n                tags: this.props.formattedTags,\r\n                count: this.props.count\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { cardInfo, cardName, attr, level, desc, atk, def, cardNo, types, decks, tags, count } = this.state;\r\n\r\n        return (\r\n            cardInfo ?\r\n                <span id=\"detailsPanel\" className=\"detailsPanel\">\r\n                    <div id=\"cardTitle\" style={{fontSize: \"20px\", marginTop: \"0px\"}}>{cardName}</div>\r\n                    <div id=\"cardNo\" style={{fontSize: \"14px\"}}>{cardNo}</div>\r\n                    <div id=\"attribute\" style={{fontSize: \"14px\"}}>{attr}</div>\r\n                    <div id=\"lv\"/>\r\n                    <div id=\"type\" style={{fontSize: \"18px\"}}>{types}</div>\r\n                    <div id=\"desc\" style={{fontSize: \"16px\"}}>{desc}</div>\r\n                    {atk ? <div id=\"atkDef\">\r\n                        <span id={\"atk\"}>{\"ATK: \" + atk}</span>\r\n                        <span> / </span>\r\n                        <span id={\"def\"}>{\"DEF: \" + def}</span>\r\n                    </div> : <span/>}\r\n                    <div id=\"count\">{count}</div>\r\n                    <div id=\"decks\">{decks}</div>\r\n                    <div id=\"tags\">{tags}</div>\r\n                </span> :\r\n                <div/>\r\n        )\r\n    }\r\n}","import { Component } from 'react';\r\nimport StockList from '../components/inventory/StockList';\r\nimport DetailsPanel from '../components/inventory/DetailsPanel'\r\n\r\nexport default class Inventory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentView: 0,\r\n            masterList: [],\r\n            cardList: [],\r\n            condensedList: [],\r\n            selectedType: \"All\",\r\n            selectedCard: \"\"\r\n        }\r\n    }\r\n\r\n    /* ELEPHANT: Add api mapping for inventory?=[cardType], where cardType is monster, spell, trap, etc */\r\n\r\n    componentDidMount() {\r\n        this.getCardList();\r\n        // this.getCardList(\"Monster\");\r\n    }\r\n\r\n    async getCardList() {\r\n        /*ELEPHANT: {cardType} is case sensitive. need to fix that in the AddCard endpoint \r\n            and then for the existing entries in repository \r\n        */\r\n        let endpoint = `${window.location.origin}/inventory`;\r\n        let request = await fetch(endpoint);\r\n        let response = await request.json();\r\n\r\n        this.setState({\r\n            masterList: response,\r\n            cardList: response\r\n        });\r\n        this.condenseCardList(response);\r\n    }\r\n\r\n    updateCardList(filterParam) {\r\n        const { masterList } = this.state;\r\n\r\n        let filteredList = (filterParam === \"All\") ? masterList : masterList.filter((item) => item.cardType === filterParam)\r\n        this.setState({\r\n            selectedType: filterParam,\r\n            cardList: filteredList\r\n        });\r\n        this.condenseCardList(filteredList);\r\n    }\r\n\r\n    condenseCardList(cardList) {\r\n        cardList.sort((a,b) => a.cardName > b.cardName ? 1 : -1);\r\n\r\n        let condensedList = {};\r\n        cardList.map((item) => {\r\n            condensedList[item.cardName] ? (condensedList[item.cardName].push(item)) : (condensedList[item.cardName] = [item])\r\n        });\r\n\r\n        this.setState({\r\n            condensedList: condensedList\r\n        });\r\n    }\r\n\r\n    onClick = (e) => {\r\n        document.getElementsByClassName(\"selected\")[0].classList.remove(\"selected\");\r\n        document.getElementById(e.target.id).classList.add(\"selected\");\r\n        document.getElementsByClassName(\"inventoryList\")[0].style.left = \"40%\";\r\n        document.getElementById(\"detailsPanel\").style.visibility = \"hidden\";\r\n        this.updateCardList(e.target.innerText);\r\n    }\r\n\r\n    handleSelectionChange = (e) => {\r\n        this.setState({\r\n            selectedCard: e\r\n        });\r\n    }\r\n\r\n    combineAttributeValues(array, attr) {\r\n        let deckList = [];\r\n        let result = [];\r\n\r\n        for(let i = 0; i < array.length; i++) {\r\n            deckList = deckList.concat(array[i][attr]);\r\n        }\r\n\r\n        result.push(deckList[0]);\r\n        for(let i = 1; i < deckList.length; i++) {\r\n            if (!result.includes(deckList[i])) {\r\n                result.push(deckList[i]);\r\n            }\r\n        }\r\n\r\n        return (result.length > 1 ? result.join(\" / \") : result[0]);\r\n    }\r\n\r\n    combineCardNo(array) {\r\n        // CardNo is the primary key and should be unique across the database\r\n        let result = [];\r\n        for (let i = 0; i < array.length; i++) {\r\n            result.push(array[i].cardNo);\r\n        }\r\n        return (result.length > 1 ? result.join(\" / \") : result[0]);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const { cardList, condensedList, selectedCard } = this.state;\r\n\r\n        let chosenOne = condensedList[selectedCard];\r\n        let cardName, attr, level,\r\n            desc, atk, def, \r\n            count, formattedCardNo, formattedTypes, \r\n            formattedDecks, formattedTags;\r\n\r\n        if (chosenOne !== undefined) {\r\n            cardName = chosenOne[0].cardName;\r\n            attr = chosenOne[0].attribute;\r\n            level = chosenOne[0].level === 0 ? null : chosenOne[0].level;\r\n            desc = chosenOne[0].description;\r\n            atk = chosenOne[0].atk;\r\n            def = chosenOne[0].def;\r\n            count = chosenOne.reduce(((accumulator,val) => accumulator + val.count), 0);\r\n            formattedCardNo = this.combineCardNo(chosenOne);\r\n            formattedDecks = this.combineAttributeValues(chosenOne, \"deck\");\r\n            formattedTypes = chosenOne[0].type.length > 1 ? chosenOne[0].type.join(\" / \") : condensedList[selectedCard][0].type[0];\r\n            formattedTags = this.combineAttributeValues(chosenOne, \"tag\");\r\n        }\r\n\r\n        return (\r\n            <div style={{position: \"relative\"}}>\r\n                <span style={{position: \"absolute\", width: \"100%\", marginTop: \"10%\", marginLeft: \"25%\"/*, left: \"30%\"*/}}>\r\n                    <button id=\"allBtn\" className=\"sortButton selected\" onClick={this.onClick}>All</button>\r\n                    <button id=\"monsterBtn\" className=\"sortButton\" onClick={this.onClick}>Monster</button>\r\n                    <button id=\"spellBtn\" className=\"sortButton\" onClick={this.onClick}>Spell</button>\r\n                    <button id=\"trapBtn\" className=\"sortButton\" onClick={this.onClick}>Trap</button>\r\n                    <button id=\"pendulumBtn\" className=\"sortButton\" onClick={this.onClick}>Pendulum</button>\r\n                    <button id=\"fusionBtn\" className=\"sortButton\" onClick={this.onClick}>Fusion</button>\r\n                    <button id=\"xyzBtn\" className=\"sortButton\" onClick={this.onClick}>Xyz</button>\r\n                    <button id=\"synchroBtn\" className=\"sortButton\" onClick={this.onClick}>Synchro</button>\r\n                    <button id=\"linkBtn\" className=\"sortButton\" onClick={this.onClick}>Link</button>\r\n                </span>\r\n                <StockList cardList={condensedList} onSelectedCard={this.handleSelectionChange}/>\r\n                {cardList ? \r\n                    <div>\r\n                        <DetailsPanel \r\n                            cardInfo={cardList[cardList.length - 1]} \r\n                            cardName={cardName}\r\n                            attr={attr}\r\n                            level={level}\r\n                            desc={desc}\r\n                            atk={atk}\r\n                            def={def}\r\n                            formattedCardNo={formattedCardNo}\r\n                            formattedTypes={formattedTypes} \r\n                            formattedDecks={formattedDecks} \r\n                            formattedTags={formattedTags}\r\n                            count={count}>\r\n                        </DetailsPanel>\r\n                    </div>\r\n                    : <div/>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","export const Ability = Object.freeze({\r\n    FLIP: \"Flip\",\r\n    GEMINI: \"Gemini\",\r\n    SPIRIT: \"Spirit\",\r\n    TOON: \"Toon\",\r\n    UNION: \"Union\",\r\n    FUSION: \"Fusion\",\r\n    XYZ: \"Xyz\",\r\n    SYNCHRO: \"Synchro\",\r\n    PENDULUM: \"Pendulum\",\r\n    LINK: \"Link\",\r\n\r\n});","export const MonsterType = Object.freeze({\r\n    AQUA: \"Aqua\",\r\n    BEAST: \"Beast\",\r\n    BEAST_WARRIOR: \"Beast-Warrior\",\r\n    CREATOR_GOD: \"Creator God\",\r\n    CYBERSE: \"Cyberse\",\r\n    DINOSAUR: \"Dinosaur\",\r\n    DIVINE_BEAST: \"Divine Beast\",\r\n    DRAGON: \"Dragon\",\r\n    FAIRY: \"Fairy\",\r\n    FIEND: \"Fiend\",\r\n    FISH: \"Fish\",\r\n    INSECT: \"Insect\",\r\n    MACHINE: \"Machine\",\r\n    PLANT: \"Plant\",\r\n    PSYCHIC: \"Psychic\",\r\n    PYRO: \"Pyro\",\r\n    REPTILE: \"Reptile\",\r\n    ROCK: \"Rock\",\r\n    SEA_SERPENT: \"Sea Serpent\",\r\n    SPELLCASTER: \"Spellcaster\",\r\n    THUNDER: \"Thunder\",\r\n    WARRIOR: \"Warrior\",\r\n    WINGED_BEAST: \"Winged Beast\",\r\n    WYRM: \"Wyrm\",\r\n    ZOMBIE: \"Zombie\"\r\n});","export const Classification = Object.freeze({\r\n    EFFECT: \"Effect\",\r\n    NORMAL: \"Normal\",\r\n    PENDULUM: \"Pendulum\",\r\n    SPECIAL_SUMMON: \"Special Summon\",\r\n    TUNER: \"Tuner\"\r\n});","export default __webpack_public_path__ + \"static/media/level_icon.b0d6fa4f.png\";","export default __webpack_public_path__ + \"static/media/attr_fire_icon.f71b71b3.png\";","export default __webpack_public_path__ + \"static/media/attr_wind_icon.f4ff73e3.png\";","export default __webpack_public_path__ + \"static/media/attr_light_icon.b0d78315.png\";","export default __webpack_public_path__ + \"static/media/attr_divine_icon.615c8e1a.png\";","import React, { Component } from 'react';\r\nimport \"../../styles/commonThemes.css\";\r\nimport \"../../styles/add.css\";\r\nimport { MonsterType } from \"../../enums/MonsterType\";\r\nimport { Ability } from \"../../enums/Ability\";\r\nimport { Classification } from \"../../enums/Classification\";\r\nimport LevelIcon from '../../assets/images/level_icon.png';\r\nimport FireIcon from '../../assets/images/attr_fire_icon.png';\r\nimport WindIcon from '../../assets/images/attr_wind_icon.png';\r\nimport LightIcon from '../../assets/images/attr_light_icon.png';\r\nimport DivineIcon from '../../assets/images/attr_divine_icon.png';\r\n\r\nexport default class MonsterForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cardType: \"\",\r\n            cardName: \"\",\r\n            cardNo: \"\",\r\n            decks: [],\r\n            tags: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDecks();\r\n        this.getTags();\r\n    }\r\n\r\n    async getDecks() {\r\n        let endpoint = `${window.location.origin}/inventory/decks`;\r\n        let request = await fetch(endpoint);\r\n        let response = await request.json();\r\n\r\n        this.setState({\r\n            decks: response\r\n        });\r\n\r\n    }\r\n\r\n    async getTags() {\r\n        let endpoint = `${window.location.origin}/inventory/tags`;\r\n        let request = await fetch(endpoint);\r\n        let response = await request.json();\r\n\r\n        this.setState({\r\n            tags: response\r\n        });\r\n    }\r\n\r\n    filterForSelected(groupName) {\r\n        let selected = null;\r\n        let elements = document.getElementsByName(groupName);\r\n        if(elements !== null) {\r\n            let i = 0;\r\n            while (i < elements.length && selected === null) {\r\n                if (elements[i].checked) {selected = elements[i].value;}\r\n                i++;\r\n            }\r\n        }\r\n\r\n        return selected;\r\n    }\r\n\r\n    render() {\r\n        const { cardType, cardName, cardNo, decks, tags } = this.state;\r\n\r\n        let typeOptions = Object.values(MonsterType);\r\n        let abilityOptions = Object.values(Ability);\r\n        let classOptions = Object.values(Classification);\r\n        let levelOptions = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ,11, 12];\r\n        let decksInstructions = \"If this card belongs to a deck already in the database, please select that deck from the dropdown. Otherwise, you may enter it in the accompanying text box.\";\r\n        let tagInstructions = \"You can select one or more options from the list (Ctrl+Click to select multiple tags). If the tag(s) you wish to use is not in the list, use the accompanying text box to include it with this card (separate multiple tags with \\\"/\\\")\";\r\n\r\n        //ELEPHANT: Add info i for each field\r\n        //ELEPHANT: Replace all the FireIcon Attribute placeholders with other Attributes\r\n        //ELEPHANT: Upon submit, make sure ATK/DEF matches a regular expression for {only numbers || \"?\"}\r\n        //ELEPHANT: If deck selection has been made and something is in the deckInput box, select element has priority\r\n        //ELEPHANT: Check tag input content (only alpha-num char) against selections from tag list. select element has priority\r\n\r\n        return (\r\n            <div className=\"contentWrapper\">\r\n                <div className=\"formElement\" style={{width: \"495px\"}}>\r\n                    <div>\r\n                        <input type=\"text\" placeholder=\"Card Number\" id=\"cardNoInput\" className=\"basicInput\" maxLength=\"10\" style={{marginRight: \"25px\"}}></input>\r\n                        <input type=\"text\" placeholder=\"Card Name\" id=\"cardNameInput\" className=\"basicInput\" maxLength=\"50\" style={{width: \"350px\"}}></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"210px\"}}>\r\n                    <label for=\"levelSelect\" style={{verticalAlign: \"middle\"}}>\r\n                        <img src={LevelIcon} alt=\"Monster Level Icon\" height=\"40px\" width=\"40px\"/>\r\n                    </label>\r\n                    <select id=\"levelSelect\" className=\"cardInfoSelect\" style={{width: \"125px\", verticalAlign: \"middle\"}}>\r\n                        <option value=\"\" disabled selected>Select Level</option>\r\n                        {levelOptions.map((level) => {\r\n                            return <option value={level}>{level}</option>\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"520px\"}}>\r\n                    <div>\r\n                        <input type=\"radio\" id=\"fireRadio\" name=\"attrRadioGroup\" value=\"fire\" style={{fontSize: \"25px\"}}/>\r\n                        <label for=\"fireRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={FireIcon} alt=\"Fire Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"windRadio\" name=\"attrRadioGroup\" value=\"wind\"/>\r\n                        <label for=\"windRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={WindIcon} alt=\"Wind Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"fireRadio\" name=\"attrRadioGroup\" value=\"water\"/>\r\n                        <label for=\"fireRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={FireIcon} alt=\"Fire Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"fireRadio\" name=\"attrRadioGroup\" value=\"earth\"/>\r\n                        <label for=\"fireRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={FireIcon} alt=\"Fire Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"lightRadio\" name=\"attrRadioGroup\" value=\"light\"/>\r\n                        <label for=\"lightRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={LightIcon} alt=\"Light Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"fireRadio\" name=\"attrRadioGroup\" value=\"dark\"/>\r\n                        <label for=\"fireRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={FireIcon} alt=\"Fire Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"divineRadio\" name=\"attrRadioGroup\" value=\"divine\"/>\r\n                        <label for=\"divineRadio\" style={{verticalAlign: \"middle\", paddingRight: \"0\"}}>\r\n                            <img src={DivineIcon} alt=\"Divine Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"650px\"}}> \r\n                    <div>\r\n                        <select id=\"typeSelect\" className=\"cardInfoSelect\" required>\r\n                            <option value=\"\" disabled selected>Select Type</option>\r\n                            {typeOptions.map((type) => {\r\n                                return <option value={type}>{type}</option>\r\n                            })}\r\n                        </select>\r\n                        <select id=\"abilitySelect\" className=\"cardInfoSelect\">\r\n                            <option value=\"\" disabled selected>Select Ability</option>\r\n                            {abilityOptions.map((ability) => {\r\n                                return <option value={ability}>{ability}</option>\r\n                            })}\r\n                        </select>\r\n                        <select id=\"classSelect\" className=\"cardInfoSelect\" style={{marginRight: \"0\"}}>\r\n                            <option value=\"\" disabled selected>Select Class</option>\r\n                            {classOptions.map((classification) => {\r\n                                return <option value={classification}>{classification}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"600px\"}}>\r\n                    <div>\r\n                        <textarea id=\"descriptionText\" placeholder=\"Enter card description.\"/>\r\n                        <label for=\"descriptionText\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"325px\"}}>\r\n                    <span style={{fontSize: \"20px\", color: \"white\"}}>\r\n                        <label for=\"atkInput\">ATK: </label>\r\n                        <input id=\"atkInput\" className=\"basicInput atkDefInput\" maxLength=\"4\" minLength=\"1\"/>\r\n                        <label for=\"defInput\">DEF: </label>\r\n                        <input id=\"defInput\" className=\"basicInput atkDefInput\" maxLength=\"4\" minLength=\"1\"/>\r\n                    </span>\r\n                </div>\r\n                <div style={{margin: \"50px auto\", borderBottom: \"2px solid white\", width: \"70%\"}}/>\r\n                <div className=\"formElement\" style={{width: \"450px\"}}>\r\n                    <div style={{color: \"white\", fontFamily: \"EBGaramond, serif\"}}>\r\n                        <div style={{fontSize: \"26px\", textAlign: \"center\"}}>Card Metrics</div>\r\n                        <p style={{width: \"450px\", fontSize: \"18px\", textAlign: \"center\"}}>{decksInstructions}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"485px\"}}>\r\n                    <span>\r\n                        <select id=\"deckSelect\" className=\"cardInfoSelect\">\r\n                            <option value=\"\" disabled selected>Select Deck</option>\r\n                            {decks.map((deck) => {\r\n                                return <option value={deck}>{deck}</option>\r\n                            })}\r\n                        </select>\r\n                        <input id=\"deckInput\" className=\"basicInput\" style={{width: \"250px\"}} maxLength=\"20\" placeholder=\"Enter deck name\"/>\r\n                        <label for=\"deckInput\"/>\r\n                    </span>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"190px\"}}>\r\n                    <div style={{fontSize: \"20px\", color: \"white\"}}>\r\n                        <label for=\"countInput\">Count: </label>\r\n                        <input id=\"countInput\" className=\"basicInput\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"450px\", color: \"white\", fontFamily: \"EBGaramond, serif\"}}>\r\n                    <p style={{fontSize: \"18px\", textAlign: \"center\"}}>{tagInstructions}</p>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"485px\"}}>\r\n                <span>\r\n                    <select id=\"tagSelect\" className=\"cardInfoSelect\" style={{height: \"250px\", maxWidth: \"200px\"}} multiple>\r\n                        {tags.map((tag) => {\r\n                            return <option value={tag}>{tag}</option>\r\n                        })}\r\n                    </select>\r\n                    <input id=\"tagInput\" className=\"basicInput\" style={{width: \"250px\", verticalAlign: \"top\"}} maxLength=\"20\" placeholder=\"Enter tag(s)\"/>\r\n                    <label for=\"tagInput\"/>\r\n                </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport \"../../styles/commonThemes.css\";\r\nimport \"../../styles/add.css\";\r\nimport { MonsterType } from \"../../enums/MonsterType\";\r\n\r\nexport default class NonMonsterForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cardType: props.cardType,\r\n            cardName: \"\",\r\n            cardNo: \"\",\r\n            type: \"\",\r\n            desc: \"\",\r\n            count: \"\",\r\n            decks: [],\r\n            tags: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDecks();\r\n        this.getTags();\r\n    }\r\n\r\n    async getDecks() {\r\n        let endpoint = `${window.location.origin}/inventory/decks`;\r\n        let request = await fetch(endpoint);\r\n        let response = await request.json();\r\n\r\n        this.setState({\r\n            decks: response\r\n        });\r\n\r\n    }\r\n\r\n    async getTags() {\r\n        let endpoint = `${window.location.origin}/inventory/tags`;\r\n        let request = await fetch(endpoint);\r\n        let response = await request.json();\r\n\r\n        this.setState({\r\n            tags: response\r\n        });\r\n    }\r\n\r\n    filterForSelected(groupName) {\r\n        let selected = null;\r\n        let elements = document.getElementsByName(groupName);\r\n        if(elements !== null) {\r\n            let i = 0;\r\n            while (i < elements.length && selected === null) {\r\n                if (elements[i].checked) {selected = elements[i].value;}\r\n                i++;\r\n            }\r\n        }\r\n\r\n        return selected;\r\n    }\r\n\r\n    render() {\r\n        const { cardType, cardName, cardNo, decks, tags } = this.state;\r\n\r\n        //adjust typeOptions based on if this is for Spell or Trap\r\n        let typeOptions = Object.values(MonsterType);\r\n        let decksInstructions = \"If this card belongs to a deck already in the database, please select that deck from the dropdown. Otherwise, you may enter it in the accompanying text box.\";\r\n        let tagInstructions = \"You can select one or more options from the list (Ctrl+Click to select multiple tags). If the tag(s) you wish to use is not in the list, use the accompanying text box to include it with this card (separate multiple tags with \\\"/\\\")\";\r\n\r\n        //ELEPHANT: Add info i for each field\r\n        //ELEPHANT: Replace all the FireIcon Attribute placeholders with other Attributes\r\n        //ELEPHANT: Upon submit, make sure ATK/DEF matches a regular expression for {only numbers || \"?\"}\r\n        //ELEPHANT: If deck selection has been made and something is in the deckInput box, select element has priority\r\n        //ELEPHANT: Check tag input content (only alpha-num char) against selections from tag list. select element has priority\r\n\r\n        return (\r\n            <div className=\"contentWrapper\">\r\n                <div className=\"formElement\" style={{width: \"495px\"}}>\r\n                    <div>\r\n                        <input type=\"text\" placeholder=\"Card Number\" id=\"cardNoInput\" className=\"basicInput\" maxLength=\"10\" style={{marginRight: \"25px\"}}></input>\r\n                        <input type=\"text\" placeholder=\"Card Name\" id=\"cardNameInput\" className=\"basicInput\" maxLength=\"50\" style={{width: \"350px\"}}></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"650px\"}}> \r\n                    <div>\r\n                        <select id=\"typeSelect\" className=\"cardInfoSelect\" required>\r\n                            <option value=\"\" disabled selected>Select Type</option>\r\n                            {typeOptions.map((type) => {\r\n                                return <option value={type}>{type}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"600px\"}}>\r\n                    <div>\r\n                        <textarea id=\"descriptionText\" placeholder=\"Enter card description.\"/>\r\n                        <label for=\"descriptionText\"/>\r\n                    </div>\r\n                </div>\r\n                <div style={{margin: \"50px auto\", borderBottom: \"2px solid white\", width: \"70%\"}}/>\r\n                <div className=\"formElement\" style={{width: \"450px\"}}>\r\n                    <div style={{color: \"white\", fontFamily: \"EBGaramond, serif\"}}>\r\n                        <div style={{fontSize: \"26px\", textAlign: \"center\"}}>Card Metrics</div>\r\n                        <p style={{width: \"450px\", fontSize: \"18px\", textAlign: \"center\"}}>{decksInstructions}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"485px\"}}>\r\n                    <span>\r\n                        <select id=\"deckSelect\" className=\"cardInfoSelect\">\r\n                            <option value=\"\" disabled selected>Select Deck</option>\r\n                            {decks.map((deck) => {\r\n                                return <option value={deck}>{deck}</option>\r\n                            })}\r\n                        </select>\r\n                        <input id=\"deckInput\" className=\"basicInput\" style={{width: \"250px\"}} maxLength=\"20\" placeholder=\"Enter deck name\"/>\r\n                        <label for=\"deckInput\"/>\r\n                    </span>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"190px\"}}>\r\n                    <div style={{fontSize: \"20px\", color: \"white\"}}>\r\n                        <label for=\"countInput\">Count: </label>\r\n                        <input id=\"countInput\" className=\"basicInput\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"450px\", color: \"white\", fontFamily: \"EBGaramond, serif\"}}>\r\n                    <p style={{fontSize: \"18px\", textAlign: \"center\"}}>{tagInstructions}</p>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"485px\"}}>\r\n                <span>\r\n                    <select id=\"tagSelect\" className=\"cardInfoSelect\" style={{height: \"250px\", maxWidth: \"200px\"}} multiple>\r\n                        {tags.map((tag) => {\r\n                            return <option value={tag}>{tag}</option>\r\n                        })}\r\n                    </select>\r\n                    <input id=\"tagInput\" className=\"basicInput\" style={{width: \"250px\", verticalAlign: \"top\"}} maxLength=\"20\" placeholder=\"Enter tag(s)\"/>\r\n                    <label for=\"tagInput\"/>\r\n                </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/add_icon.c17498a2.png\";","export default __webpack_public_path__ + \"static/media/delete_icon.55c559a3.png\";","import React, { Component } from 'react';\r\nimport \"../../styles/commonThemes.css\";\r\nimport \"../../styles/add.css\";\r\nimport { MonsterType } from \"../../enums/MonsterType\";\r\nimport { Ability } from \"../../enums/Ability\"; //auto-set to \"Fusion\" and disabled\r\nimport { Classification } from \"../../enums/Classification\";\r\nimport LevelIcon from '../../assets/images/level_icon.png';\r\nimport FireIcon from '../../assets/images/attr_fire_icon.png';\r\nimport WindIcon from '../../assets/images/attr_wind_icon.png';\r\nimport LightIcon from '../../assets/images/attr_light_icon.png';\r\nimport DivineIcon from '../../assets/images/attr_divine_icon.png';\r\nimport AddIcon from '../../assets/images/add_icon.png';\r\nimport DeleteIcon from '../../assets/images/delete_icon.png';\r\n\r\nexport default class MaterialMonsterForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cardType: props.cardType,\r\n            cardName: \"\",\r\n            cardNo: \"\",\r\n            materials: [],\r\n            links: [],\r\n            decks: [],\r\n            tags: [],\r\n        };\r\n\r\n        this.addMaterial = this.addMaterial.bind(this);\r\n        this.deleteMaterial = this.deleteMaterial.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDecks();\r\n        this.getTags();\r\n        this.setState({\r\n            cardType: this.props.cardType\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.cardType !== this.state.cardType) {\r\n            this.setState({\r\n                cardType: this.props.cardType\r\n            });\r\n\r\n            document.getElementById(\"abilitySelect\").value = this.props.cardType;\r\n        }\r\n    }\r\n\r\n    async getDecks() {\r\n        let endpoint = `${window.location.origin}/inventory/decks`;\r\n        let request = await fetch(endpoint);\r\n        let response = await request.json();\r\n\r\n        this.setState({\r\n            decks: response\r\n        });\r\n\r\n    }\r\n\r\n    async getTags() {\r\n        let endpoint = `${window.location.origin}/inventory/tags`;\r\n        let request = await fetch(endpoint);\r\n        let response = await request.json();\r\n\r\n        this.setState({\r\n            tags: response\r\n        });\r\n    }\r\n\r\n    filterForSelected(groupName) {\r\n        let selected = null;\r\n        let elements = document.getElementsByName(groupName);\r\n        if(elements !== null) {\r\n            let i = 0;\r\n            while (i < elements.length && selected === null) {\r\n                if (elements[i].checked) {selected = elements[i].value;}\r\n                i++;\r\n            }\r\n        }\r\n\r\n        return selected;\r\n    }\r\n\r\n    addMaterial = (e) => {\r\n        const { materials } = this.state;\r\n\r\n        let newMaterial = document.getElementById(\"newMaterialInput\").value;\r\n        let temp = materials;\r\n        if (newMaterial !== \"\") {temp.push(newMaterial)};\r\n\r\n        document.getElementById(\"newMaterialInput\").value = \"\";\r\n        this.setState({\r\n            materials: temp\r\n        });\r\n    }\r\n\r\n    deleteMaterial = (e) => {\r\n        const { materials } = this.state;\r\n        let selected = e.target.id;\r\n\r\n        let selectedText = document.getElementById(\"materialText_\" + selected.substring(selected.indexOf('_') + 1)).textContent;\r\n        console.log(selectedText);\r\n\r\n        let result = [];\r\n        for(let i=0; i < materials.length; i++) {\r\n            if (materials[i] !== selectedText) {result.push(materials[i])};\r\n        }\r\n\r\n        this.setState({\r\n            materials: result\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { cardType, cardName, cardNo, materials, decks, tags } = this.state;\r\n\r\n        let typeOptions = Object.values(MonsterType);\r\n        let abilityOptions = Object.values(Ability);\r\n        let classOptions = Object.values(Classification);\r\n        let levelOptions = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ,11, 12];\r\n        let decksInstructions = \"If this card belongs to a deck already in the database, please select that deck from the dropdown. Otherwise, you may enter it in the accompanying text box.\";\r\n        let tagInstructions = \"You can select one or more options from the list (Ctrl+Click to select multiple tags). If the tag(s) you wish to use is not in the list, use the accompanying text box to include it with this card (separate multiple tags with \\\"/\\\")\";\r\n        let materialInstructions = \"Add a Material by entering the material in the box and clicking the green Add button. You can remove an added material by clicking the red delete button next to that material.\";\r\n\r\n        let linkSection = (cardType === \"Link\") ? <div>Link Section</div> : null; //remember to disable DEF input\r\n        console.log(\"cardType: \" + cardType);\r\n        let abilitySelection = cardType;\r\n        //ELEPHANT: Add info i for each field\r\n        //ELEPHANT: Replace all the FireIcon Attribute placeholders with other Attributes\r\n        //ELEPHANT: Upon submit, make sure ATK/DEF matches a regular expression for {only numbers || \"?\"}\r\n        //ELEPHANT: If deck selection has been made and something is in the deckInput box, select element has priority\r\n        //ELEPHANT: Check tag input content (only alpha-num char or dashes) against selections from tag list. select element has priority\r\n        //ELEPHANT: Fix text wrapping when material name overflows width\r\n\r\n        return (\r\n            <div className=\"contentWrapper\">\r\n                <div className=\"formElement\" style={{width: \"495px\"}}>\r\n                    <div>\r\n                        <input type=\"text\" placeholder=\"Card Number\" id=\"cardNoInput\" className=\"basicInput\" maxLength=\"10\" style={{marginRight: \"25px\"}}></input>\r\n                        <input type=\"text\" placeholder=\"Card Name\" id=\"cardNameInput\" className=\"basicInput\" maxLength=\"50\" style={{width: \"350px\"}}></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"210px\"}}>\r\n                    <label for=\"levelSelect\" style={{verticalAlign: \"middle\"}}>\r\n                        <img src={LevelIcon} alt=\"Monster Level Icon\" height=\"40px\" width=\"40px\"/>\r\n                    </label>\r\n                    <select id=\"levelSelect\" className=\"cardInfoSelect\" style={{width: \"125px\", verticalAlign: \"middle\"}}>\r\n                        <option value=\"\" disabled selected>Select Level</option>\r\n                        {levelOptions.map((level) => {\r\n                            return <option value={level}>{level}</option>\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"520px\"}}>\r\n                    <div>\r\n                        <input type=\"radio\" id=\"fireRadio\" name=\"attrRadioGroup\" value=\"fire\" style={{fontSize: \"25px\"}}/>\r\n                        <label for=\"fireRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={FireIcon} alt=\"Fire Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"windRadio\" name=\"attrRadioGroup\" value=\"wind\"/>\r\n                        <label for=\"windRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={WindIcon} alt=\"Wind Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"fireRadio\" name=\"attrRadioGroup\" value=\"water\"/>\r\n                        <label for=\"fireRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={FireIcon} alt=\"Fire Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"fireRadio\" name=\"attrRadioGroup\" value=\"earth\"/>\r\n                        <label for=\"fireRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={FireIcon} alt=\"Fire Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"lightRadio\" name=\"attrRadioGroup\" value=\"light\"/>\r\n                        <label for=\"lightRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={LightIcon} alt=\"Light Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"fireRadio\" name=\"attrRadioGroup\" value=\"dark\"/>\r\n                        <label for=\"fireRadio\" style={{verticalAlign: \"middle\"}}>\r\n                            <img src={FireIcon} alt=\"Fire Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                        <input type=\"radio\" id=\"divineRadio\" name=\"attrRadioGroup\" value=\"divine\"/>\r\n                        <label for=\"divineRadio\" style={{verticalAlign: \"middle\", paddingRight: \"0\"}}>\r\n                            <img src={DivineIcon} alt=\"Divine Attribute Icon\" height=\"40px\" width=\"40px\"/>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"650px\"}}> \r\n                    <div>\r\n                        <select id=\"typeSelect\" className=\"cardInfoSelect\" required>\r\n                            <option value=\"\" disabled selected>Select Type</option>\r\n                            {typeOptions.map((type) => {\r\n                                return <option value={type}>{type}</option>\r\n                            })}\r\n                        </select>\r\n                        <select id=\"abilitySelect\" className=\"cardInfoSelect\" defaultValue={abilitySelection} disabled>\r\n                            <option value=\"\" disabled selected>Select Ability</option>\r\n                            {abilityOptions.map((ability) => {\r\n                                return <option value={ability}>{ability}</option>\r\n                            })}\r\n                        </select>\r\n                        <select id=\"classSelect\" className=\"cardInfoSelect\" style={{marginRight: \"0\"}}>\r\n                            <option value=\"\" disabled selected>Select Class</option>\r\n                            {classOptions.map((classification) => {\r\n                                return <option value={classification}>{classification}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"600px\"}}>\r\n                    <p style={{width: \"450px\", margin: \"10px auto\", color: \"white\", fontFamily: \"EBGaramond, serif\", fontSize: \"18px\", textAlign: \"center\"}}>{materialInstructions}</p>\r\n                    <div style={{width: \"450px\", margin: \"10px auto\"}}>\r\n                        <div style={{width: \"300px\", margin: \"10px auto\"}}>\r\n                            <input type=\"image\" id=\"addMaterialBtn\" src={AddIcon} height=\"25px\" width=\"25px\" onClick={this.addMaterial} style={{verticalAlign: \"middle\"}}/>\r\n                            <input type=\"text\" className=\"basicInput\" id=\"newMaterialInput\" autoComplete=\"off\" style={{width: \"250px\", verticalAlign: \"middle\", marginLeft: \"10px\"}}/>\r\n                        </div>\r\n                        <div className=\"formListWrapper\" style={{width: \"auto\", margin: \"0 auto\", textAlign: \"center\"}}>\r\n                            <div className=\"listCategoryLeft\">Added Materials: </div>\r\n                            <div id=\"materialsList\" className=\"columnRightList\">\r\n                                {materials.map((material, index) => {\r\n                                    return (\r\n                                        <span id={\"materialRow_\" + index} style={{height: \"30px\", width : \"auto\"}}>\r\n                                            <button onClick={this.deleteMaterial} style={{background: \"transparent\", border: \"none\"}}>\r\n                                                <img  id={\"deleteMaterialBtn_\" + index} src={DeleteIcon} alt=\"Delete Icon\" height=\"25px\" width=\"25px\"/>\r\n                                            </button>\r\n                                            <div id={\"materialText_\" + index} style={{float: \"right\", marginRight: \"10px\", marginTop: 0, verticalAlign: \"middle\"}}>{material}</div>\r\n                                        </span>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {linkSection}\r\n                <div className=\"formElement\" style={{width: \"600px\", marginTop: \"25px\"}}>\r\n                    <div>\r\n                        <textarea id=\"descriptionText\" placeholder=\"Enter card description.\"/>\r\n                        <label for=\"descriptionText\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"325px\"}}>\r\n                    <span style={{fontSize: \"20px\", color: \"white\"}}>\r\n                        <label for=\"atkInput\">ATK: </label>\r\n                        <input id=\"atkInput\" className=\"basicInput atkDefInput\" maxLength=\"4\" minLength=\"1\"/>\r\n                        <label for=\"defInput\">DEF: </label>\r\n                        <input id=\"defInput\" className=\"basicInput atkDefInput\" maxLength=\"4\" minLength=\"1\"/>\r\n                    </span>\r\n                </div>\r\n                <div style={{margin: \"50px auto\", borderBottom: \"2px solid white\", width: \"70%\"}}/>\r\n                <div className=\"formElement\" style={{width: \"450px\"}}>\r\n                    <div style={{color: \"white\", fontFamily: \"EBGaramond, serif\"}}>\r\n                        <div style={{fontSize: \"26px\", textAlign: \"center\"}}>Card Metrics</div>\r\n                        <p style={{width: \"450px\", fontSize: \"18px\", textAlign: \"center\"}}>{decksInstructions}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"485px\"}}>\r\n                    <span>\r\n                        <select id=\"deckSelect\" className=\"cardInfoSelect\">\r\n                            <option value=\"\" disabled selected>Select Deck</option>\r\n                            {decks.map((deck) => {\r\n                                return <option value={deck}>{deck}</option>\r\n                            })}\r\n                        </select>\r\n                        <input id=\"deckInput\" className=\"basicInput\" style={{width: \"250px\"}} maxLength=\"20\" placeholder=\"Enter deck name\"/>\r\n                        <label for=\"deckInput\"/>\r\n                    </span>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"190px\"}}>\r\n                    <div style={{fontSize: \"20px\", color: \"white\"}}>\r\n                        <label for=\"countInput\">Count: </label>\r\n                        <input id=\"countInput\" className=\"basicInput\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"450px\", color: \"white\", fontFamily: \"EBGaramond, serif\"}}>\r\n                    <p style={{fontSize: \"18px\", textAlign: \"center\"}}>{tagInstructions}</p>\r\n                </div>\r\n                <div className=\"formElement\" style={{width: \"485px\"}}>\r\n                <span>\r\n                    <select id=\"tagSelect\" className=\"cardInfoSelect\" style={{height: \"250px\", maxWidth: \"200px\"}} multiple>\r\n                        {tags.map((tag) => {\r\n                            return <option value={tag}>{tag}</option>\r\n                        })}\r\n                    </select>\r\n                    <input id=\"tagInput\" className=\"basicInput\" style={{width: \"250px\", verticalAlign: \"top\"}} maxLength=\"20\" placeholder=\"Enter tag(s)\"/>\r\n                    <label for=\"tagInput\"/>\r\n                </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport \"../styles/commonThemes.css\";\r\nimport \"../styles/add.css\";\r\nimport \"../styles/modal.css\";\r\n// import LevelIcon from '../assets/images/level_icon.png';\r\n// import FireIcon from '../assets/images/attr_fire_icon.png';\r\n// import WindIcon from '../assets/images/attr_wind_icon.png';\r\nimport { Ability } from '../enums/Ability';\r\nimport AddModal from '../components/modal/AddModal';\r\nimport MonsterForm from '../components/forms/MonsterForm';\r\nimport NonMonsterForm from '../components/forms/NonMonsterForm';\r\nimport MaterialMonsterForm from '../components/forms/MaterialMonsterForm';\r\n\r\nexport default class Add extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cardType: \"\",\r\n            cardName: \"\",\r\n            cardNo: \"\",\r\n            level: 0,\r\n            attr: \"\",\r\n            type: \"\",\r\n            ability: \"\",\r\n            class: \"\",\r\n            desc: \"\",\r\n            atk: \"\",\r\n            def: \"\",\r\n            count: \"\",\r\n            decks: [],\r\n            tags: [],\r\n            show: false,\r\n            selectedType: \"monster\"\r\n        }\r\n\r\n        this.filterForSelected = this.filterForSelected.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDecks();\r\n        this.getTags();\r\n    }\r\n\r\n    async getDecks() {\r\n        let endpoint = `${window.location.origin}/inventory/decks`;\r\n        let request = await fetch(endpoint);\r\n        let response = await request.json();\r\n\r\n        this.setState({\r\n            decks: response\r\n        });\r\n\r\n    }\r\n\r\n    async getTags() {\r\n        let endpoint = `${window.location.origin}/inventory/tags`;\r\n        let request = await fetch(endpoint);\r\n        let response = await request.json();\r\n\r\n        this.setState({\r\n            tags: response\r\n        });\r\n    }\r\n\r\n    filterForSelected() {\r\n        let selected = null;\r\n        let elements = document.getElementsByName(\"cardTypeRadioGroup\");\r\n        if(elements !== null) {\r\n            let i = 0;\r\n            while (i < elements.length && selected === null) {\r\n                if (elements[i].checked) {selected = elements[i].value;}\r\n                i++;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            selectedType: selected\r\n        });\r\n    }\r\n\r\n    getForm(selectedType) {\r\n        switch (selectedType) {\r\n            case \"spell\":\r\n                return <NonMonsterForm cardType={\"Spell\"}/>;\r\n            case \"trap\":\r\n                return <NonMonsterForm cardType={\"Trap\"}/>\r\n            case \"fusion\":\r\n                return <MaterialMonsterForm cardType={Ability.FUSION}/>\r\n            case \"synchro\":\r\n                return <MaterialMonsterForm cardType={Ability.SYNCHRO}/>\r\n            case \"xyz\":\r\n                return <MaterialMonsterForm cardType={Ability.XYZ}/>\r\n            case \"link\":\r\n                return <MaterialMonsterForm cardType={Ability.LINK}/>\r\n            default:\r\n                return <MonsterForm cardType={\"Monster\"}/>\r\n        }\r\n    }\r\n\r\n    onSubmit = () => {\r\n        /*\r\n            - popup confirmation modal filled with form information\r\n            - \"Confirm\" and \"Cancel\" buttons\r\n            - grey out background\r\n            - on submit, add info to repository\r\n        */\r\n\r\n    //     let cardType = this.filterForSelected(\"cardTypeRadioGroup\");\r\n    //     let cardNo = document.getElementById(\"cardNoInput\").value;\r\n    //     let cardName = document.getElementById(\"cardNameInput\").value;\r\n\r\n    //     console.log(\"Info: \" + cardType + \", \" + cardNo + \", \" + cardName);\r\n\r\n    //    this.setState({\r\n    //         cardType: cardType,\r\n    //         cardName: cardName,\r\n    //         cardNo: cardNo,\r\n    //         // level: 0,\r\n    //         // attr: \"\",\r\n    //         // type: \"\",\r\n    //         // ability: \"\",\r\n    //         // class: \"\",\r\n    //         // desc: \"\",\r\n    //         // atk: \"\",\r\n    //         // def: \"\",\r\n    //         // count: \"\",\r\n    //         // decks: [],\r\n    //         // tags: [],\r\n    //         show: true\r\n    //    });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { show, selectedType } = this.state;\r\n\r\n        let description = \"Cards are stored based on the card number. This number is uneditable, so make sure you've entered it correctly. All other information can be edited at a later time.\";\r\n        \r\n        //ELEPHANT: Add info i for each field\r\n        //ELEPHANT: Replace all the FireIcon Attribute placeholders with other Attributes\r\n        //ELEPHANT: Upon submit, make sure ATK/DEF matches a regular expression for {only numbers || \"?\"}\r\n        //ELEPHANT: If deck selection has been made and something is in the deckInput box, select element has priority\r\n        //ELEPHANT: Check tag input content (only alpha-num char) against selections from tag list. select element has priority\r\n\r\n        let formView = this.getForm(selectedType);\r\n\r\n        return(\r\n                <div className=\"contentWrapper\">\r\n                    <div>\r\n                        <div id=\"header\" style={{textAlign: \"center\"}}>Add Card</div>\r\n                        <div id=\"description\" style={{width: \"500px\", margin: \"0 auto\"}}>\r\n                            <ol id=\"instructions\">\r\n                                <li>Select a card type</li>\r\n                                <li>Fill in the card information. (All information is required)</li>\r\n                                <li>Click \"Add\" to add card to your inventory</li>\r\n                            </ol>\r\n                            <div style={{width: \"500px\", textAlign: \"center\"}}>{description}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"formElement\" style={{width: \"800px\"}}>\r\n                        <span id=\"cardTypeSelection\" className=\"radioGroup\">\r\n                            <input type=\"radio\" id=\"monsterRadio\" name=\"cardTypeRadioGroup\" value=\"monster\" defaultChecked={true} onChange={this.filterForSelected}/>\r\n                            <label for=\"monsterRadio\">Monster</label>\r\n                            <input type=\"radio\" id=\"spellRadio\" name=\"cardTypeRadioGroup\" value=\"spell\" onChange={this.filterForSelected}/>\r\n                            <label for=\"spellRadio\">Spell</label>\r\n                            <input type=\"radio\" id=\"trapRadio\" name=\"cardTypeRadioGroup\" value=\"trap\" onChange={this.filterForSelected}/>\r\n                            <label for=\"trapRadio\">Trap</label>\r\n                            <input type=\"radio\" id=\"pendulumRadio\" name=\"cardTypeRadioGroup\" value=\"pendulum\" onChange={this.filterForSelected}/>\r\n                            <label for=\"pendulumRadio\">Pendulum</label>\r\n                            <input type=\"radio\" id=\"fusionRadio\" name=\"cardTypeRadioGroup\" value=\"fusion\" onChange={this.filterForSelected}/>\r\n                            <label for=\"fusionRadio\">Fusion</label>\r\n                            <input type=\"radio\" id=\"xyzRadio\" name=\"cardTypeRadioGroup\" value=\"xyz\" onChange={this.filterForSelected}/>\r\n                            <label for=\"xyzRadio\">Xyz</label>\r\n                            <input type=\"radio\" id=\"synchroRadio\" name=\"cardTypeRadioGroup\" value=\"synchro\" onChange={this.filterForSelected}/>\r\n                            <label for=\"synchroRadio\">Synchro</label>\r\n                            <input type=\"radio\" id=\"linkRadio\" name=\"cardTypeRadioGroup\" value=\"link\" onChange={this.filterForSelected}/>\r\n                            <label for=\"linkRadio\">Link</label>\r\n                        </span>\r\n                    </div>\r\n                    {formView}\r\n                    <div className=\"formElement\" style={{width: \"190px\", marginTop: \"50px\"}}>\r\n                        <button className=\"formBtn okBtn\" onClick={this.onSubmit}>Submit</button>\r\n                        <button className=\"formBtn ccBtn\">Clear</button>\r\n                        {/* <AddModal cardType={cardType} name={cardName} number={cardNo} show={show}/> */}\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/millenium_eye_trnp_1.1d937b88.png\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MilleniumEye from '../assets/images/millenium_eye_trnp_1.png';\r\nimport '../styles/home.css';\r\n\r\nexport default class Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selected: 'None'\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        /* ELEPHANT: Come back and vertically align li text */\r\n        return(\r\n            <div className=\"menu\">\r\n                 <ul id='menuOptions' className=\"menuOptions\">\r\n                     <li>\r\n                        <Link className=\"menuLink\" to=\"/add\">\r\n                            <img src={MilleniumEye} alt=\"Add Card\" height=\"40px\" width=\"75px\"/>\r\n                            Add Card\r\n                        </Link>\r\n                     </li>\r\n                     <li>\r\n                        <Link className=\"menuLink\" to=\"/inventory\">\r\n                            <img src={MilleniumEye} alt=\"Inventory\" height=\"40px\" width=\"75px\"/>\r\n                            Inventory\r\n                        </Link>\r\n                     </li>\r\n                     <li>Second Card</li>\r\n                     <li>Third Card</li>\r\n                     <li>Fourth Card</li>\r\n                 </ul>\r\n                \r\n                {/* <span id=\"removeCard\" className=\"menuItem\" style={{marginTop: \"50px\", background: \"red\"}}>\r\n                    <img src={MilleniumEye} alt=\"Remove Card\" height=\"40px\" width=\"75px\"></img>\r\n                    <div className=\"menuItem\" style={{paddingRight: '65px'}}>Remove Card</div>\r\n                </span> */}\r\n                {/* <span className=\"menuItem\">\r\n                    <img src={MilleniumEye} alt=\"Edit Card\" height=\"40px\" width=\"75px\"></img>\r\n                    <div className=\"menuItem\" style={{paddingRight: '109px'}}>Edit Card</div>\r\n                </span> */}\r\n                {/* <span className=\"menuItem\">\r\n                    <img src={MilleniumEye} alt=\"Decks\" height=\"40px\" width=\"75px\"></img>\r\n                    <div className=\"menuItem\" style={{paddingRight: '150px'}}>Decks</div>\r\n                </span> */}\r\n                {/* <Link to=\"/inventory\">\r\n                    <span id=\"inventory\" className=\"menuItem\" style={{marginTop: \"50px\", background: \"red\"}}>\r\n                        <img src={MilleniumEye} alt=\"Inventory\" height=\"40px\" width=\"75px\"></img>\r\n                        <div className=\"menuItem\" style={{paddingRight: '109px'}}>Inventory</div>\r\n                    </span>\r\n                </Link> */}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Menu from '../components/Menu';\r\n\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Menu/>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Switch, Route } from \"react-router-dom\";\r\nimport Inventory from './pages/inventory';\r\nimport Add from './pages/add';\r\nimport Home from './pages/home';\r\n\r\nconst Main = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path={'/inventory'} component={Inventory}/>\r\n            <Route path={'/add'} component={Add}/>\r\n            <Route path={'/'} component={Home}/>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Main from './routes';\r\n\r\nexport default function App() {\r\n    return(\r\n        <Router>\r\n            <Main/>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\n// import reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport routes from './routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter routes={routes}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}